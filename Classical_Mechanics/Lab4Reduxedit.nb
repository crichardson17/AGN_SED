(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    291622,       5796]
NotebookOptionsPosition[    285701,       5603]
NotebookOutlinePosition[    286044,       5618]
CellTagsIndexPosition[    286001,       5615]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Lab 4: Resonant Harmonic Motion
Christopher Greene, Michael Imbimbo, Henry Davis\
\>", "Title",
 CellChangeTimes->{{3.6840027186603403`*^9, 3.6840027438030033`*^9}}],

Cell[CellGroupData[{

Cell["Simulation 1", "Section",
 CellChangeTimes->{{3.6840027726490984`*^9, 3.6840028008734694`*^9}, {
  3.684002992227764*^9, 3.6840029923680263`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "define", " ", "constants", " ", "and", " ", "initial", " ", 
    "conditions"}], " ", "*)"}], "\[IndentingNewLine]", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"g", " ", "=", " ", "9.8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m", " ", "=", " ", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y1", " ", "=", " ", "2.069"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y3", " ", "=", " ", "0.5246"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xeq", "=", "0.366"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ti", " ", "=", " ", "0.33"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", " ", "=", " ", "0.7705"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dt", " ", "=", " ", ".01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"keff", " ", "=", " ", "11.58"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c2", " ", "=", "1.227"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", " ", "=", " ", "0.12"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]01", " ", "=", " ", "1.405"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", "3.733"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "0.2596"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{"b", "*", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "define", " ", "an", " ", "array", " ", "where", " ", "we", " ", "store", 
     " ", "the", " ", "results", " ", "of", " ", "the", " ", "simulation"}], 
    " ", "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modeldata", " ", "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"ti", ",", "x"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "set", " ", "up", " ", "the", " ", "procedure", " ", "for", " ", 
      "step"}], "-", "by", "-", 
     RowBox[{
     "step", " ", "solution", " ", "of", " ", "the", " ", "equation", " ", 
      "of", " ", "motion"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"t", "=", "ti"}], ",", 
      RowBox[{"t", "<", "tf"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"calculate", " ", "the", " ", "acceleration"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fs", " ", "=", " ", 
        RowBox[{
         RowBox[{"-", "keff"}], 
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"(", 
            RowBox[{"xeq", "+", 
             RowBox[{"b", "*", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Omega]01", "*", "t"}], "+", "\[Phi]"}], "]"}]}]}], 
            ")"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Ff2", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sign", "[", "vx", " ", "]"}]}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"Abs", "[", "vx", "]"}], ")"}], "2"], "*", "c2"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ax", "=", 
        FractionBox[
         RowBox[{"Fs", "+", "Ff2"}], "m"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"redefine", " ", "y"}], ",", " ", "vy", ",", " ", 
         RowBox[{
         "in", " ", "terms", " ", "of", " ", "the", " ", "values", " ", 
          "from", " ", "the", " ", "previous", " ", "step"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"vx", " ", "=", " ", 
        RowBox[{"vx", "+", " ", 
         RowBox[{"ax", " ", "dt"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", " ", 
        RowBox[{"x", " ", "+", " ", 
         RowBox[{"vx", " ", "dt"}]}]}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"t", "=", " ", 
        RowBox[{"t", " ", "+", " ", "dt"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "add", " ", "the", " ", "results", " ", "of", " ", "the", " ", 
         "calculation", " ", "step", " ", "to", " ", "the", " ", "array"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"modeldata", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"modeldata", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "x"}], "}"}]}], "]"}]}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataplot", " ", "=", " ", 
     RowBox[{"ListPlot", "[", "modeldata", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", "dataplot", "}"}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6840028717566423`*^9, 3.6840028804197216`*^9}, 
   3.684002946328555*^9, {3.684003032789824*^9, 3.684003035819249*^9}, {
   3.684003194019925*^9, 3.6840032327586594`*^9}, {3.684003567618879*^9, 
   3.6840035963091984`*^9}, {3.684003725187519*^9, 3.6840037444523983`*^9}, {
   3.6840037823354673`*^9, 3.6840038328405333`*^9}, {3.6840039558540306`*^9, 
   3.684004038586559*^9}, {3.6840041173601494`*^9, 3.6840042275613728`*^9}, {
   3.684004514844581*^9, 3.6840045162314205`*^9}, {3.684004949848997*^9, 
   3.684004950995141*^9}, {3.684071660378318*^9, 3.6840716646715817`*^9}, {
   3.684072349653694*^9, 3.684072351706609*^9}, {3.6858922134250083`*^9, 
   3.6858922788374777`*^9}, {3.685892339438552*^9, 3.6858923431792192`*^9}}],

Cell[BoxData["0.429`"], "Output",
 CellChangeTimes->{3.684004522835308*^9, 3.6840049519479437`*^9, 
  3.684071665593467*^9, 3.684072354686405*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1m3dczd8fxylZ0dSO9t7dxq1b3u8kKzsyQsjOTkRWZZYdUVZkh5BbaWhv
7b3r3ivRlyiRMn6f+65f/3j0uNf5nM95ntd5vs/nfNJYu2PhepFhw4Z9FB02
TPjv/38WJkw63rmgFuifhFsw9pOuTYrM/39/Dpx12Vzx0BoYWxO103FsPIxx
fykdVVk99Plb+DHl6cgZjVXAop9MqHSYP4vzsnLo+7lQa3RXI2BFBbQdmPB8
elsBXNSpdZbpKBv6/8VQ6Ct9TXlVKcygL5RB1uimqrcXisCK2quAMUUbVsR4
FoC68OuTquDwfr+PH9i5MI7ar4FDC5c+UjTMgj79FeczemuB2zpNvXRyOgjo
evUQvuj4ufnDU6D0nfCnEX6q+MQM74qHZLp+M8SOzlH3c4uFRdShVrBbXubd
vOs5zBrsMByadcC6f+5DQLohHihpxXwpmnUHbKh/fOBdNDh0pekaGAsvry8A
00BL/c1BF0GT+vsesn+HhpSpnQZFprEDE9phRf/qg/Mkj4EE9f8DeHSeFAur
DoIRRKMD/m5fZ7F1xynop/vpgIZrfk7BzRfg6wJhBz/C6r2RwYUpV6GduvcJ
0tKf5vybHwmNNBydsMV1v2bOvftQTvf7H7y0eDt+5+toyOsVNvgZ2C3jzsQb
vYS3dP9fYPqyiq6pr17Da2H3nndBo5QNt3pZAiym8fgKv5Lsc55JJg+N31fY
mvX2X01GKrjS+HwDc9E0SadX6ZBD7X+DnIxRD6X2ZIITjVc3qNmN+ftWI3to
vLthZ3h5zKL4HLCl8esBzeyel90WefCKrt8DZ4ftO5xxPh9MaDy/Q9KtK4cE
JQXwSHh7Ud9hVsicbyu7C0GLxrcXfvvJiI7qewe3woU/vSCV7qC8n1cESjTe
P+D7j7+z/sQWw+UMYQd/QO38JT4HdpSAJI3/T7h+dpmDxbhSCBY2d/wn+H32
EZu3rBTEiEcf3Ov3NuLcKYWjwuE+0AcRyhflJ7eXwgDx6QOf/tX6cYZlsFfY
vZ2/wOXUCZ/Ru8rgG/H6BeMfg+mFpDLYukH40w8zCu87nh1XDh+IXz+EV+vu
lNlQDmuFt7tiAOasWmjxPb8cmojnAPyMYT1KsKuApcTjN6xouTklOK4CKojH
b7j8KCLKxKkS5hKPP9CYrvR2oK4S8onHH1ibvSK89WgVTCUef2H4MvWGVdbV
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
T2lvyeGbmPqP/DEZ9z7zcsyZLoD/AQcMTzw=
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.684004522835308*^9, 3.6840049519479437`*^9, 
  3.684071665593467*^9, 3.6840723547469544`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Sim1.csv\>\"", ",", "modeldata"}], "]"}]], "Input",
 CellChangeTimes->{{3.684004253455697*^9, 3.684004255368626*^9}, {
  3.684004339399042*^9, 3.684004357797412*^9}}],

Cell[BoxData["\<\"Sim1.csv\"\>"], "Output",
 CellChangeTimes->{
  3.684004128972995*^9, {3.6840041651830273`*^9, 3.6840042557202888`*^9}, 
   3.6840043586108446`*^9, 3.6840716728444633`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{"AbsoluteFileName", "[", "\"\<Sim1.csv\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 NumberMarks->False],

Cell["\<\
After importing the data into LoggerPro, we fit the data to a Sine curve to \
get the response values of A, \[Phi], and \[Omega]r\
\>", "Text",
 CellChangeTimes->{{3.6840046323027353`*^9, 3.684004701320562*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ar1", " ", "=", " ", "0.2788"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]r1", " ", "=", " ", "3.861"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]r1", " ", "=", " ", "1.405"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6840047037259483`*^9, 3.684004798515588*^9}, {
  3.684005093816382*^9, 3.6840051028571663`*^9}, {3.684071713104946*^9, 
  3.684071722934907*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation II", "Section",
 CellChangeTimes->{{3.684004813159484*^9, 3.6840048152947164`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "define", " ", "constants", " ", "and", " ", "initial", " ", 
    "conditions"}], " ", "*)"}], "\n", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"g", " ", "=", " ", "9.8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"m", " ", "=", " ", "0.429"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xeq", "=", "0.366"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", "xeq"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ti", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", " ", "=", " ", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dt", " ", "=", " ", ".03"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"keff", " ", "=", " ", "11.58"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c2", " ", "=", "1.227"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", " ", "=", " ", "0.12"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]02", " ", "=", " ", "3.824"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", "3.082"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "0.2582"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{"b", "*", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "define", " ", "an", " ", "array", " ", "where", " ", "we", " ", "store", 
     " ", "the", " ", "results", " ", "of", " ", "the", " ", "simulation"}], 
    " ", "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modeldata", " ", "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"ti", ",", "x"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "set", " ", "up", " ", "the", " ", "procedure", " ", "for", " ", 
      "step"}], "-", "by", "-", 
     RowBox[{
     "step", " ", "solution", " ", "of", " ", "the", " ", "equation", " ", 
      "of", " ", "motion"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"t", "=", "ti"}], ",", 
      RowBox[{"t", "<", "tf"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"calculate", " ", "the", " ", "acceleration"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fs", " ", "=", " ", 
        RowBox[{
         RowBox[{"-", "keff"}], 
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"(", 
            RowBox[{"xeq", "+", 
             RowBox[{"b", "*", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Omega]02", "*", "t"}], "+", "\[Phi]"}], "]"}]}]}], 
            ")"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Ff2", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sign", "[", "vx", " ", "]"}]}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"Abs", "[", "vx", "]"}], ")"}], "2"], "*", "c2"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ax", "=", 
        FractionBox[
         RowBox[{"Fs", "+", "Ff2"}], "m"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"redefine", " ", "y"}], ",", " ", "vy", ",", " ", 
         RowBox[{
         "in", " ", "terms", " ", "of", " ", "the", " ", "values", " ", 
          "from", " ", "the", " ", "previous", " ", "step"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"vx", " ", "=", " ", 
        RowBox[{"vx", "+", " ", 
         RowBox[{"ax", " ", "dt"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", " ", 
        RowBox[{"x", " ", "+", " ", 
         RowBox[{"vx", " ", "dt"}]}]}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"t", "=", " ", 
        RowBox[{"t", " ", "+", " ", "dt"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "add", " ", "the", " ", "results", " ", "of", " ", "the", " ", 
         "calculation", " ", "step", " ", "to", " ", "the", " ", "array"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"modeldata", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"modeldata", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "x"}], "}"}]}], "]"}]}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataplot", " ", "=", " ", 
     RowBox[{"ListPlot", "[", "modeldata", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", "dataplot", "}"}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.684004851529567*^9, {3.684004912409504*^9, 3.6840049406333447`*^9}, {
   3.684004992442299*^9, 3.6840050276812496`*^9}, {3.6840716443697147`*^9, 
   3.6840716479081984`*^9}, {3.684072323881005*^9, 3.6840723438029757`*^9}}],

Cell[BoxData["0.429`"], "Output",
 CellChangeTimes->{
  3.6840052906643705`*^9, 3.6840716485956783`*^9, {3.684072325308243*^9, 
   3.6840723440217304`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1m3k8VG0bgEWl0kKUNdn3fYxt6L5LO6XSSrt2JW/aadWKomjVSouiUiJb
RvZ9l30dM6MUSklRvpmbzz/vb36vzjznuZ7rXM+ZM1Q37122VVREROSTmIiI
8L///xl96pq9/+4qiFc+27E0/h5E7Ow2fL7v/69fwtGBmwm/BK/HVYV72o17
B3XjBsxSNv3//6fArOqs3j+MKmDQTzq8a7YZM6L54/DvZ0NVN2ZorP8ILUdl
Xs5ryQORM3cbXJ5VDv/7Iki95/kuil0B8+kXSkHr5oFt28PKwZyOVw4yhl0r
f60oAxXhrytXwvgM45QDLSUwno5fBczcOunB0CLo01kbmPazGnbutP7T5ZAP
bfR+tWBrarw1uj0bSgqEP/XA/TdoO+dCBiTT+zeCv8ol1zH4AZbTgJrBTC9f
6+z8ZFg4NGBwVFT4IR8UB0gn1Aps/taLeUdfgwWNjwNl61e6Xl7xHAyEb6/T
Bn/Oa5pPPR0OajReLlyQkr426/BdkBMc7KgMD76lO43187sJE2n8fKi5cLjE
Kf0mjCQa7ZC5y29l5tt78IfOpx1OX3hveHH7Y+heKhzgJ7CSbP+49/pL4NHw
PkPR/m32W91ioZ6mowOsnapNAqqSoYzO9wv0tHtWVyakQc5P4QG/wubYEkbC
sWxIofPvhIwXLjleNwvgrXB4L7tAvK/5kmtvCayg+eiGglPPl+lGlw/PXzc0
ZnqNWOPxERxofr7B8yiocNGugSw6/je4qiJdJF9eBzNpvr7DmgPtdVG7Gofn
+zukck1bRu5vBkuavx7o3yTObQ5rgTf0/j1wTXw5cyu7FQxpPn/Agzf7butk
cyBCeHrhPyBdedmBgndtoE7z+xNCJ9970nmZC/duCX8Er+PPXp22kAfyNN+9
MGbnW4lCHg9C0oQD7AXZ3N6vCzfzYRLN/y9wejFd5k0CH/yEhzv7C049HBhf
+4kPo4hHH+wWm7BzZhcfTgqn+2gfdJbVn+3K5EM/8ekD1/JRc4/u4sNB4fA8
f4PYh8VHptQLOBOv3+DRnn0nW4kHu7cJf/7ABC3jexqmXOATvz9w4Ck/OHx6
G2wWnu7afpBq1apJ7WqFBuLZDwkrHE/oPGuB1cRjAHovp22c4twM5cRjAFqX
3ON+4jfAYuLxF8ZN+aYTpFYHucTjL6TJFe1w3VANs4nHP4i+GLtb/EklsInH
P7CXaxo1/W8Z2BCPQdgnfV/NYVcJxBKPQUhLrFpmzM0fXr8iaHvP1mMVM3t4
fYggY3NfRUdhGlyl+RXBMIfczzZ730MxjU8EIzYHfHbsjR32dQT+62qTrzz7
EhbQeEeglb71u7nFYXCO5n8EnpxmMWGw6Qqk0/hHYB8u3XZUfhMMXa1E0ek+
59lpn9Nsmm47UfxiXnjyd0Ygm6bzqCiGJ/B/SK27wn5H5yeKk0/s/W2y3Y/9
g3iJYsnnq7t5AdvZpnS+Yhi92UVGRd0fPOiAYoiaeq+qpMMgks5fDPdk1zMc
ZKKhnXiKYV6Y9qga53jQpPU5ElfuGXuuIDsVNhPfkSg7Wt67LTMT7tN6HYk7
TteIBIjnQz0NcCT2nr4++bB1CcjT+h2Fv4wUPRv7ymAl8R+F4WUPr/rFV0Iw
redReHvJtZtXPauhhNbDKNS8HxU7R6EOJhCP0aj1QHFc06sGWEg8RiMjZuwS
lanNcJ54jEbxJZVj181pgQziMRrd/c0P7nFrhRHEQxw7iuef0/bgwAziIY6e
L6NOb3JrA2/iIY5PSmNH85EL8cRDHLfZvUjcO5IHPweFP+J4rDA773okD8yI
xxis/a2lVMbgw17iMQbvtZ422nGbD1HEYwyyw19tdavnwyfiMQZ/7GuUOtXL
By3iMRZPTbhRL8/lgxvxGIsnZikzLR7x4QHxGIuzZ9yYH2XKhwbiMRYHtk1e
13eJBwrEYxyqhAQdsEzmwiriMQ41pCb8jfvQBiHEYxxGFs/rs3zMgVLiMQ71
dsl+VfBohYnEQwL1Ch79e6reAg7EQwLfLvogoX6rCS4QDwkceXXZE/eGesgk
HhJ48V1PpJZyLYgSj/HYKf20I96tCoYCNx4Prg//Zx5bAT7EYzz+GS91PEKu
DBKIx3h8161QkK1VDL0fhQecgB2+047vXZ4HDOIxAQ/vFBlwSM8ET+IxAW/H
nzgi5fMBXhCPCWjxdpP9h4lJ8Jl4TMDTT7G3oy4GtInHRLwxuHmrPec5bCEe
E/G8/sUjr/zuw0PiMRGV9U1UZGX9oJF4TMSg8t6SS6or2YrEYxJmj+HcN8g8
x15NPCah6QqJunNXgtjXiMckTB7cnW98IohdRjwmYUqV/t6YNWfZY2g+JPHw
gaj8wZPLQZuOJ4lvxZpZGZ7BMJfmRxKVrJ3CnDMew1Y6viQeqlkaeBfewBma
L0lcfsdpqnVaIoTT+0li38EJhvJyaZBG8yeJZoP6CaidDS30/pJ45lt0b8a+
AhCh9S2Fiy68c/jWXQLTaX1I4aRbG7Y/f1U+vN6lcIbtg9rruz/COlovUniD
p/fCUKUGfGi+pTCwxOyFeEYdhNL6kUI/xzXxIcsaIZHmXwpzxdK19rg1Qw2t
Jyncc1j1k/LlFugjHlIY1t8hbvi0FWRpfU3GHSPrJ+2N4oAF8ZmMYdPF8xJC
22AFrbfJyLwRVV6xjwv7iddk7LEWf/WfMW/4ejAZvRbnO6kX8+AN8ZuMthbu
Giuc+FBK63Eyfn3l7Ysv+NBNPCfj0ivy2k0CnyYRD2m8uarqS/VPPhgRD2ms
Ppk7b1cNHxYRD2kc7aA6UBzAh93EQxq1Vm6/6jORD/7EQxq/zPnWHriBB8+J
hzTmht6LeOfLhVziIY3rUmfYPzvZNny9lMbffQ/Gua7jgDjxkMGjTbXAUG0F
LeIhg0H1MdFry5thDvGQwdAKm9jXPxphC/GQwfeNXQvvWdaDL/GQwcNvf8yX
OVIDYcRDBvlqsZtUPnyED8RDBp9M8y8JnFoBzcRDBj9fF/1qe6IUCMegDI4v
m7HsmUgR0PQpT8GwtSWRqna5MNSTKcjxfnqlMDkDaHhrp+C2zC2hqy6kgjfx
mIL7gh+IZi1JgNvEYwomGm0z/M/hDSTQAafgrPi3rNeaEVBNPKag1/m2y3/4
t+EX8ZiCOSyDHp2I0zCVeEzFgYjxTrjDk80kHlOxMcxt7aexfuyh/ehUjHiS
GfBx1BW2Fw1wKjp5nN2d6RzIHurtVOwWlUtLbjnJfk08puJ+Me7fvCqv4f3a
VFw7KScg+/xN6CIeU7FEXK/BpzdieP8pi+K3U185qr4d3m/JYlOQmaJ3UzI4
Eg9ZNF2tuOuOXTq4Ew9ZzOn/otq/Nmd4vySLwZIpv6LeFMIz4iGLmx9skVkf
XDq835TFkwPJbmuWVQzvd2SxMlBqxIsJVTCaei6HavGBqJBSA5rEQw4/lQ84
7ltXP7xfkcOndf8ZLuI1ghvxkMO9fmonuc+a4TTxkMPdLPlj0SUt8JB4yGH4
bI+w1dxWSCUecij59DkvlsuBJuIhh6P7Y9puF7fBP+Ihh11LLrXmPeDCNOIh
j2D8YMq3lTywJR7yWCkeqnOziweuxEMeNZjhIqo7+HCUeMgjKyvz3rv3fLhF
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
DzusMT2zQTIvDdypHzPQP/O+dO2B9/A/cAlZqg==
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6840052906643705`*^9, 3.6840716485956783`*^9, {3.684072325308243*^9, 
   3.684072344099857*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Sim2.csv\>\"", ",", "modeldata"}], "]"}]], "Input",
 CellChangeTimes->{{3.6840052818026037`*^9, 3.6840052820670547`*^9}}],

Cell[BoxData["\<\"Sim2.csv\"\>"], "Output",
 CellChangeTimes->{3.684005321631796*^9, 3.6840716521659107`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ar2", " ", "=", " ", "0.3793"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]r2", " ", "=", " ", "2.266"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]r2", " ", "=", " ", "3.824"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6840053465109463`*^9, 3.684005407729622*^9}, {
  3.6840717593413405`*^9, 3.684071764962869*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation III", "Section",
 CellChangeTimes->{{3.684005411633887*^9, 3.684005426863544*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "define", " ", "constants", " ", "and", " ", "initial", " ", 
    "conditions"}], " ", "*)"}], "\n", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"g", " ", "=", " ", "9.8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"m", " ", "=", " ", "0.429"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xeq", "=", "0.366"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", "xeq"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ti", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", " ", "=", " ", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dt", " ", "=", " ", ".03"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"keff", " ", "=", " ", "11.58"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c2", " ", "=", "1.227"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", " ", "=", " ", "0.12"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]03", " ", "=", " ", "5.124"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", "2.813"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "0.2641"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{"b", "*", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "define", " ", "an", " ", "array", " ", "where", " ", "we", " ", "store", 
     " ", "the", " ", "results", " ", "of", " ", "the", " ", "simulation"}], 
    " ", "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modeldata", " ", "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"ti", ",", "x"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "set", " ", "up", " ", "the", " ", "procedure", " ", "for", " ", 
      "step"}], "-", "by", "-", 
     RowBox[{
     "step", " ", "solution", " ", "of", " ", "the", " ", "equation", " ", 
      "of", " ", "motion"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"t", "=", "ti"}], ",", 
      RowBox[{"t", "<", "tf"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"calculate", " ", "the", " ", "acceleration"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fs", " ", "=", " ", 
        RowBox[{
         RowBox[{"-", "keff"}], 
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"(", 
            RowBox[{"xeq", "+", 
             RowBox[{"b", "*", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Omega]03", "*", "t"}], "+", "\[Phi]"}], "]"}]}]}], 
            ")"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Ff2", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sign", "[", "vx", " ", "]"}]}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"Abs", "[", "vx", "]"}], ")"}], "2"], "*", "c2"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ax", "=", 
        FractionBox[
         RowBox[{"Fs", "+", "Ff2"}], "m"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"redefine", " ", "y"}], ",", " ", "vy", ",", " ", 
         RowBox[{
         "in", " ", "terms", " ", "of", " ", "the", " ", "values", " ", 
          "from", " ", "the", " ", "previous", " ", "step"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"vx", " ", "=", " ", 
        RowBox[{"vx", "+", " ", 
         RowBox[{"ax", " ", "dt"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", " ", 
        RowBox[{"x", " ", "+", " ", 
         RowBox[{"vx", " ", "dt"}]}]}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"t", "=", " ", 
        RowBox[{"t", " ", "+", " ", "dt"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "add", " ", "the", " ", "results", " ", "of", " ", "the", " ", 
         "calculation", " ", "step", " ", "to", " ", "the", " ", "array"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"modeldata", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"modeldata", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "x"}], "}"}]}], "]"}]}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataplot", " ", "=", " ", 
     RowBox[{"ListPlot", "[", "modeldata", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", "dataplot", "}"}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6840056008825083`*^9, 3.6840056805639343`*^9}, {
  3.6840716284378743`*^9, 3.6840716310809884`*^9}, {3.684072359458974*^9, 
  3.6840723616405544`*^9}}],

Cell[BoxData["0.429`"], "Output",
 CellChangeTimes->{3.684005656080846*^9, 3.6840057088153205`*^9, 
  3.6840543689796476`*^9, 3.6840716313363028`*^9, 3.684072362224711*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.684005656080846*^9, 3.6840057088153205`*^9, 
  3.6840543689796476`*^9, 3.6840716313363028`*^9, 3.684072362287211*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Sim3.csv\>\"", ",", "modeldata"}], "]"}]], "Input",
 CellChangeTimes->{{3.6840052818026037`*^9, 3.6840052820670547`*^9}, {
  3.684005735971787*^9, 3.6840057471154327`*^9}}],

Cell[BoxData["\<\"Sim3.csv\"\>"], "Output",
 CellChangeTimes->{3.684005743056828*^9, 3.6840543691980486`*^9, 
  3.6840716349684134`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ar3", " ", "=", " ", "0.3347"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]r3", " ", "=", " ", "1.320"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]r3", " ", "=", " ", "5.124"}], ";"}]}], "Input",
 CellChangeTimes->{{3.684005839727907*^9, 3.6840058809368134`*^9}, {
  3.6840059206457934`*^9, 3.68400592474135*^9}, {3.684054363061406*^9, 
  3.6840543633734083`*^9}, {3.6840718084535704`*^9, 3.684071812951378*^9}}],

Cell["\<\
Follow the same pattern for the rest of the trials.  Make sure that you do \
the sine fit for late time data (so that the weirdness of the beginning doesn\
\[CloseCurlyQuote]t make the fit worse.)  After all 10 trials are done, we \
need to plot \[Omega]0 vs \[Omega]r, Ar vs \[Omega]0, and \[Phi]r vs \
\[Omega]0.  To get the value for b, you do a Sine fit of the angle plot \
(blue) in the trial data files.  Section 3.6 in the book is what we are \
doing, so the plots hopefully will look similar to those. *)\
\>", "Text",
 CellChangeTimes->{{3.6840059403447504`*^9, 3.6840060558621397`*^9}, {
  3.684006121686736*^9, 3.6840061261049805`*^9}, {3.684006171410966*^9, 
  3.684006173629549*^9}, {3.684006262968299*^9, 3.6840064518628654`*^9}, {
  3.6840543651362195`*^9, 3.684054365588622*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation IV", "Section",
 CellChangeTimes->{{3.6840027726490984`*^9, 3.6840028008734694`*^9}, {
  3.684002992227764*^9, 3.6840029923680263`*^9}, {3.684052901607023*^9, 
  3.6840529159834604`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "define", " ", "constants", " ", "and", " ", "initial", " ", 
    "conditions"}], " ", "*)"}], "\[IndentingNewLine]", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"g", " ", "=", " ", "9.8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"m", " ", "=", " ", "0.429"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", " ", "0.38"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xeq", "=", "0.366"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ti", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", " ", "=", " ", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dt", " ", "=", " ", ".03"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"keff", " ", "=", " ", "11.58"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c2", " ", "=", "1.227"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", " ", "=", " ", "0.12"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]04", " ", "=", " ", "5.935"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", "3.628"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "0.2547"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{"b", "*", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "define", " ", "an", " ", "array", " ", "where", " ", "we", " ", "store", 
     " ", "the", " ", "results", " ", "of", " ", "the", " ", "simulation"}], 
    " ", "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modeldata", " ", "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"ti", ",", "x"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "set", " ", "up", " ", "the", " ", "procedure", " ", "for", " ", 
      "step"}], "-", "by", "-", 
     RowBox[{
     "step", " ", "solution", " ", "of", " ", "the", " ", "equation", " ", 
      "of", " ", "motion"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"t", "=", "ti"}], ",", 
      RowBox[{"t", "<", "tf"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"calculate", " ", "the", " ", "acceleration"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fs", " ", "=", " ", 
        RowBox[{
         RowBox[{"-", "keff"}], 
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"(", 
            RowBox[{"xeq", "+", 
             RowBox[{"b", "*", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Omega]04", "*", "t"}], "+", "\[Phi]"}], "]"}]}]}], 
            ")"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Ff2", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sign", "[", "vx", " ", "]"}]}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"Abs", "[", "vx", "]"}], ")"}], "2"], "*", "c2"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ax", "=", 
        FractionBox[
         RowBox[{"Fs", "+", "Ff2"}], "m"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"redefine", " ", "y"}], ",", " ", "vy", ",", " ", 
         RowBox[{
         "in", " ", "terms", " ", "of", " ", "the", " ", "values", " ", 
          "from", " ", "the", " ", "previous", " ", "step"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"vx", " ", "=", " ", 
        RowBox[{"vx", "+", " ", 
         RowBox[{"ax", " ", "dt"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", " ", 
        RowBox[{"x", " ", "+", " ", 
         RowBox[{"vx", " ", "dt"}]}]}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"t", "=", " ", 
        RowBox[{"t", " ", "+", " ", "dt"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "add", " ", "the", " ", "results", " ", "of", " ", "the", " ", 
         "calculation", " ", "step", " ", "to", " ", "the", " ", "array"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"modeldata", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"modeldata", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "x"}], "}"}]}], "]"}]}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataplot", " ", "=", " ", 
     RowBox[{"ListPlot", "[", "modeldata", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", "dataplot", "}"}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6840028717566423`*^9, 3.6840028804197216`*^9}, 
   3.684002946328555*^9, {3.684003032789824*^9, 3.684003035819249*^9}, {
   3.684003194019925*^9, 3.6840032327586594`*^9}, {3.684003567618879*^9, 
   3.6840035963091984`*^9}, {3.684003725187519*^9, 3.6840037444523983`*^9}, {
   3.6840037823354673`*^9, 3.6840038328405333`*^9}, {3.6840039558540306`*^9, 
   3.684004038586559*^9}, {3.6840041173601494`*^9, 3.6840042275613728`*^9}, {
   3.684004514844581*^9, 3.6840045162314205`*^9}, {3.684004949848997*^9, 
   3.684004950995141*^9}, {3.684053726350647*^9, 3.684053735154647*^9}, {
   3.6840700457595077`*^9, 3.684070046181387*^9}, {3.684070446704152*^9, 
   3.684070462351764*^9}, {3.6840705220910015`*^9, 3.6840705399764147`*^9}, {
   3.684070755803822*^9, 3.684070760120327*^9}, {3.6840723689661226`*^9, 
   3.6840723754314947`*^9}}],

Cell[BoxData["0.429`"], "Output",
 CellChangeTimes->{
  3.684004522835308*^9, 3.6840049519479437`*^9, 3.684054138507311*^9, 
   3.684054388809375*^9, 3.684054429162264*^9, 3.684069595404974*^9, 
   3.684069729947439*^9, 3.684070046743843*^9, 3.6840701103466263`*^9, {
   3.684070457687133*^9, 3.6840704627111344`*^9}, {3.6840705226562333`*^9, 
   3.6840705571784277`*^9}, 3.684070761778158*^9, 3.684071621488866*^9, {
   3.684072371720288*^9, 3.6840723759971895`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
E7Bs47ypWbG58D8nfEb/
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.684004522835308*^9, 3.6840049519479437`*^9, 3.684054138507311*^9, 
   3.684054388809375*^9, 3.684054429162264*^9, 3.684069595404974*^9, 
   3.684069729947439*^9, 3.684070046743843*^9, 3.6840701103466263`*^9, {
   3.684070457687133*^9, 3.6840704627111344`*^9}, {3.6840705226562333`*^9, 
   3.6840705571784277`*^9}, 3.684070761778158*^9, 3.684071621488866*^9, {
   3.684072371720288*^9, 3.6840723760596724`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Sim4.csv\>\"", ",", "modeldata"}], "]"}]], "Input",
 CellChangeTimes->{{3.684004253455697*^9, 3.684004255368626*^9}, {
   3.684004339399042*^9, 3.684004357797412*^9}, {3.684054154822942*^9, 
   3.6840541549159513`*^9}, {3.684069928818372*^9, 3.6840699516832933`*^9}, {
   3.6840699876225867`*^9, 3.68406999415888*^9}, 3.6840704331409893`*^9}],

Cell[BoxData["\<\"Sim4.csv\"\>"], "Output",
 CellChangeTimes->{
  3.684004128972995*^9, {3.6840041651830273`*^9, 3.6840042557202888`*^9}, 
   3.6840043586108446`*^9, 3.6840541407455344`*^9, 3.6840543951430154`*^9, 
   3.6840544292714643`*^9, 3.684069995765587*^9, {3.684070113308443*^9, 
   3.6840701172009387`*^9}, 3.684070497201661*^9, 3.684070559289282*^9, 
   3.6840707687023606`*^9, 3.684071623397853*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{"AbsoluteFileName", "[", "\"\<Sim4.csv\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.684054182565716*^9},
 NumberMarks->False],

Cell[BoxData[
 TemplateBox[{
  "AbsoluteFileName","fdnfnd",
   "\"Directory or file \
\\!\\(\\*RowBox[{\\\"\\\\\\\"Sim4.csv\\\\\\\"\\\"}]\\) not found.\"",2,60,13,
   32517175716137737961,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.684069923868677*^9, 3.6840699971663923`*^9}],

Cell[BoxData[
 TemplateBox[{
  "DirectoryName","string",
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"DirectoryName\\\", \\\"[\\\", \\\"$Failed\\\", \
\\\"]\\\"}]\\).\"",2,60,14,32517175716137737961,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.684069923868677*^9, 3.684069997228893*^9}],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", "$Failed", "]"}], "]"}]], "Output",
 CellChangeTimes->{3.6840699239311852`*^9, 3.684069997228893*^9}]
}, Open  ]],

Cell["\<\
After importing the data into LoggerPro, we fit the data to a Sine curve to \
get the response values of A, \[Phi], and \[Omega]r\
\>", "Text",
 CellChangeTimes->{{3.6840046323027353`*^9, 3.684004701320562*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ar4", " ", "=", " ", "0.2786"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]r4", " ", "=", " ", "1.799"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]r4", " ", "=", " ", "5.935"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6840047037259483`*^9, 3.684004798515588*^9}, {
  3.684005093816382*^9, 3.6840051028571663`*^9}, {3.684054159972457*^9, 
  3.6840541698604455`*^9}, {3.6840702046664867`*^9, 3.6840702283404627`*^9}, {
  3.6840705970224237`*^9, 3.6840706183626075`*^9}, {3.6840707307153397`*^9, 
  3.684070739029813*^9}, {3.6840708082985334`*^9, 3.684070822130164*^9}, {
  3.684071855358972*^9, 3.6840718568742356`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation V", "Section",
 CellChangeTimes->{{3.6840027726490984`*^9, 3.6840028008734694`*^9}, {
  3.684002992227764*^9, 3.6840029923680263`*^9}, {3.684052909959858*^9, 
  3.6840529123760996`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "define", " ", "constants", " ", "and", " ", "initial", " ", 
    "conditions"}], " ", "*)"}], "\[IndentingNewLine]", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"g", " ", "=", " ", "9.8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"m", " ", "=", " ", "0.429"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", " ", "0.38"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xeq", "=", "0.366"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ti", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", " ", "=", " ", "60"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dt", " ", "=", " ", ".03"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"keff", " ", "=", " ", "11.58"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c2", " ", "=", "1.227"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", " ", "=", " ", "0.12"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]05", " ", "=", " ", "5.935"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", "3.263"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "0.2549"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{"b", "*", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "define", " ", "an", " ", "array", " ", "where", " ", "we", " ", "store", 
     " ", "the", " ", "results", " ", "of", " ", "the", " ", "simulation"}], 
    " ", "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modeldata", " ", "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"ti", ",", "x"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "set", " ", "up", " ", "the", " ", "procedure", " ", "for", " ", 
      "step"}], "-", "by", "-", 
     RowBox[{
     "step", " ", "solution", " ", "of", " ", "the", " ", "equation", " ", 
      "of", " ", "motion"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"t", "=", "ti"}], ",", 
      RowBox[{"t", "<", "tf"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"calculate", " ", "the", " ", "acceleration"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fs", " ", "=", " ", 
        RowBox[{
         RowBox[{"-", "keff"}], 
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"(", 
            RowBox[{"xeq", "+", 
             RowBox[{"b", "*", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Omega]05", "*", "t"}], "+", "\[Phi]"}], "]"}]}]}], 
            ")"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Ff2", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sign", "[", "vx", " ", "]"}]}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"Abs", "[", "vx", "]"}], ")"}], "2"], "*", "c2"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ax", "=", 
        FractionBox[
         RowBox[{"Fs", "+", "Ff2"}], "m"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"redefine", " ", "y"}], ",", " ", "vy", ",", " ", 
         RowBox[{
         "in", " ", "terms", " ", "of", " ", "the", " ", "values", " ", 
          "from", " ", "the", " ", "previous", " ", "step"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"vx", " ", "=", " ", 
        RowBox[{"vx", "+", " ", 
         RowBox[{"ax", " ", "dt"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", " ", 
        RowBox[{"x", " ", "+", " ", 
         RowBox[{"vx", " ", "dt"}]}]}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"t", "=", " ", 
        RowBox[{"t", " ", "+", " ", "dt"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "add", " ", "the", " ", "results", " ", "of", " ", "the", " ", 
         "calculation", " ", "step", " ", "to", " ", "the", " ", "array"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"modeldata", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"modeldata", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "x"}], "}"}]}], "]"}]}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataplot", " ", "=", " ", 
     RowBox[{"ListPlot", "[", "modeldata", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", "dataplot", "}"}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6840028717566423`*^9, 3.6840028804197216`*^9}, 
   3.684002946328555*^9, {3.684003032789824*^9, 3.684003035819249*^9}, {
   3.684003194019925*^9, 3.6840032327586594`*^9}, {3.684003567618879*^9, 
   3.6840035963091984`*^9}, {3.684003725187519*^9, 3.6840037444523983`*^9}, {
   3.6840037823354673`*^9, 3.6840038328405333`*^9}, {3.6840039558540306`*^9, 
   3.684004038586559*^9}, {3.6840041173601494`*^9, 3.6840042275613728`*^9}, {
   3.684004514844581*^9, 3.6840045162314205`*^9}, {3.684004949848997*^9, 
   3.684004950995141*^9}, {3.684053811518647*^9, 3.684053823350647*^9}, {
   3.684070240225914*^9, 3.684070241606578*^9}, {3.6840703798220263`*^9, 
   3.6840704112572474`*^9}, {3.6840706931490793`*^9, 
   3.6840707111388516`*^9}, {3.6840708576914816`*^9, 
   3.6840709004570312`*^9}, {3.6840715965064173`*^9, 
   3.6840715983735423`*^9}, {3.6840724049090123`*^9, 3.6840724066590824`*^9}}],

Cell[BoxData["0.429`"], "Output",
 CellChangeTimes->{
  3.684004522835308*^9, 3.6840049519479437`*^9, 3.684054454467626*^9, 
   3.684069582419244*^9, 3.684070241903454*^9, 3.684070422219385*^9, 
   3.6840709013168974`*^9, {3.6840715986391683`*^9, 3.68407160413778*^9}, 
   3.6840724076445866`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw0nHVYFH0XhpUwQFQEREAQpLs7zmEXLGwM7EBfAxURCzFADBRMbERFREVs
6e5GumsLCxuxML6Zgx//eHGBszNz/565zzOzi8Zq37lrxQYNGlQzdNAg9t//
f81NUTvcM6cZ6J+Ua7AFHqwbhf///iEsyZTpN5VuBqmmmK3OUskQrPt679xb
Tf9+ngXDDjvkKA1qAkv6yoeKRk9rlXGN/36/GC7oSAUU9tQDf4/8w8n8MjiA
XUpng+r+/f/n8OJbxYyN/BqYQr9QA4P2rKhaq1oNVrS9Ojjfl1a4K7wC1Nlf
V2sAQNWUUx0lMIK23wTqG98cLPcshO96S0/l9TWD/IwdWQfk8kBEr9cKXh4T
J8jsz4LqCvarHZbOMfI/8i4VMuj1O8Eh6/6a8c+SYB7tEA++VNx0rpdKhGkD
OwybHqwK/2KWCEgHJICwFwUtAWuSwYb2TwiPu23vrKpKByP25fVEkFU1o+Gc
TS5MpP3thl9NpbcrDhXCOGZje+RfQO6QDYqjY8tgJO3/SziYoXXprGk1SBCN
V+D2or3Y0qkOftLxvILt5xz435c2wsc57A6+hkGrPweUBLTAC9q9N/DjopyR
4v52aKfT0QOf75kE+3h1QS0d71tY66tUUveLByV97AbfwW4nr6lGBgLIouN/
D5c33zgiayKEBHb3Hn6A1+P64mPFRDCfzsdHGPThpa3eTdG/8/cR1h+1Ol04
pBs86Px8Ai+fnXtXGnRDEW3/E3yZ3tg/jfm5K52vz7B32yp+cYTo3/n+DPvm
H/XtrhGCLZ2/XigNe/v9S5EAntLr98LQ8s6ENQf4YEzn8wvkTnC4h9I8uMse
XswXuJRwJb/1azto0vntg1MbFl21yW6Ba5fZrz7Iz1xXF3W8EZTofH8Fgaz8
vDDfOjiXx+7gV9A70bswKqgaRtH5/waZu/qLxkSWw3F2c4e/wZzjvnG/iotA
knh8h3WPLvkn3MiDIPZ07/kO84rW/2jbnQX9xOc7fBk6/ouvdyrsZHdv6w8o
qPW2uWCSBJ+I1w+IGVscVD88ETb9x379BJvL0/QH6SfBS+L3EwzcdRScc1Jh
NXu4S/vBrvT7rSX12dBBPPthan3y3yjFAvAiHr8gY1Ho35dWpVBHPH6Bj7bU
hf8GVcFM4vEbJt3wXld6pRZKicdvkJr2LTmirAHciMcfePF6845NX5ohm3j8
gVc+Lw4/H9wODsTjL+x6mJk2jtcJicTjL0jG3tAuy+b9W7+D8OFaDdMpr/n/
1scgfKT3a/78FwI4S+d3EC5QOeet/kQIVbR/g/DXeb3Tv7mif3kdjF4vnr41
vSyCqbS/gzHW7079/XsiOELnfzDO2b1tWqWfCPJp/wejxdEPI9ReC2HgaiWG
hrMa5cePEQKdbmcxtPolVbKzjw90OveIoYRvtN/iaB4k0/GJYZb5KbEFMzrh
C/ESQ31r8fonRm1gTscrjoL4BNMZf5tgC21QHIvNlqwT76qHeDp+cZz3csky
a+b69Ip4iuPKtmO/Jpk+B21anxLYbDfrYcXEUlhNfCVwrRv/2cnkArhO61UC
V1u9CGiWzIV22kEJLF7Ss3Xn1AxQovUricsDHq8VzU+BBcRfEt/vy/xxeEUS
RNB6lkROzQnO0EtJUE3rQRKdDrR+e2KTCjLEYwhOHF3SOX5BFkwjHkNw3kYZ
zZ9v8uAo8RiC7V7rjMofFUMB8RiCu3cfu1vmWAmDicdQFJyPitGNrQEX4jEU
B+eeaHlQUQ+BxGMoJmo+C9//jbneE4+huODMIn0vmTbo+8t+DcVI5dO3LX52
gAXxGIY/JIIH313AA1/iMQzHbw/fph3Oh/vEYxiGTPmeoXNRAK+JxzDcOWyK
QpqfEHSIx3Bcb3a2R3esCLyJx3Bc8N8yvfT9IrhBPIaj1KDTvUdiRdBBPIbj
BM/RhWqHRKBMPKTQLjxG9F1OBAuJhxQOmvIndfY8IZwjHlKYq3c7McdDADXE
QwrNhtoOkxnKh5HEQxpnyoRydI27wIN4SKOub3Dqt7HtEEo8pFFtcXDqzJ5m
KCQe0jj6sPOUPYUNIEY8RqDMh6527YxaGBDcCHS8IHNSu6AK9hKPEWg96cU9
jZNlkEo8RiDoa80u/lQIXxvZDcpgj2vH2G9D88CSeMjgparb0xWrM2Er8ZBB
/qZdiifnpMID4iGD31dpB67KS4I3xEMGY8Y3XxvnmQS6xGMkphpZLbOyT4E1
xGMkrvxQLWl5LQOiicdIHMl54noqNRc6icdIHBqn2v7GtghUiMcobGx7u+7e
6XLwIh6j8O6yv95iOdVwnniMwhRX+ZH2/DqoJR6j8F7WqGUPZJpgGJ2P0Ri3
+1JujmEr6NL2RuPcwfM/uet0wCQ6P6Nxv9plrZieLlhL2x+N9w4+ttpsw4dD
dL5Go0tkWuSimQKIodcbjcKzfZdDbYWQR+dvNE7Ui/e1fSsEPr3+aNSXW89P
/E8Eg2h9y+JpyT8ZxtEimEDrQxbbLO2tVp4X/Vvvsjjj9nKdNU4iWEbrRRaj
D31xWxohhL10vmXxc9fWbxXXBBBJ60cWQ7QePn6zgQ9pdP5l8VjCkSfzJXjQ
QutJFmMzg58F/GmH78RDFhOfZU2SamwBRVpfYzC0YIXk8PuNYEN8xqDBoV3R
PpfqYD6ttzFYIH9a69fDathOvMbgLlnVV+cHVfy7HoxBbUVhgJN1MTwlfmPQ
fuMFra0K+VBD63EMXu0eJyjwy4aPxHMMmllu6GrYlAajiIccSlxZdLZ8ajKY
EA853PxY/oGzXRLMIB5y6PupuvedTzJsIh5y6LysUyFPMR3CiIccxg5bGvDj
Wg7cIx5y+CVL+eyP2gIoJR5yuHuq7ceg3tJ/10s5PH58rP6JrCoYSjzkcW7F
+kE132pBh3jIo4f2g55OzUZwJx7y+J/uVBf/KS2whnjIY8qwFaONZrVDCPGQ
R7fnMRXB2l1wk3jIo7KY3pCXHTzIJR7y2BzRvM1KTAA84iGPx++9OxrwQwCE
4688frj2tkuYKQQ6fWoKuHPb7dD8qaJ/PlHA/Yt4Pp4XRUC7t1QB608eqt1z
QwSBxEMBfyX2bQ5cLoIrxEMBlXLmWRyqEEIqbVABV+8R+vS+FUAz8VDAar3h
To6lfPhGPBRQyq5q6l9fHowlHmNxQuYur6OiDrAmHmPxnGfMoQe5rf/m0bF4
2CB4hd/5JvCnHRyLMx1N+tQD6v/5dizO6wwqvxVcA0+Ix1iUGrEdC4Mq/81r
Y9HkkqfE+tAS+EA8xqLuEf39/lYF/+ZPRTy5o+C6RFTOv3lLEbcv2zzJ+mk6
TCceiohqCvmf/ySDD/FQRCEoqijNSvo3LyliX82G4Hf1SRBHPBRR+l1TWEBx
6r95UxEfrrORabTP/jfvKOIkn8K8/uB8GEI+H4cGS14uu7ymBLSJxziM3Drh
8j7J5//mlXEYb2G179OoWvAmHuNwzW/T2Z72DXCQeIzDN6XjIkJXN0M08RiH
u98t0nnt3wY5xGMcTlHQEX+zqBO6iMc4XJureUD+IA/+EI9xKPOyJwOe8kGV
eCjhAY+PDyYkC8CJeChhxlXxNZXHhbCEeCjhmLCD187pimAP8VBCpbpHmHFU
BJeJhxJ6PH3ZN43xUwrxUMLZj5XWZgSIoIl4KGHdotQXr/8I4SvxUEL9UtOH
UtZCUCAeyjhDTmrNbU0BWBEPZXx1aa6dTjMPPImHMk4zsUuYV9QJ24iHMr6c
d//uyfg2OEM8lDFQet0DmwPN8Jh4KGNPXWLJ9yUNUEU8lNF312TF9wtr4T3x
UEaX5z2iMqkqkCEeKpjQlrgv9WUpGBEPFdzW1lGZu6oQPIiHCprmTtoXfCYX
NhIPFRy9P/CX9/hMOEY8VLB+0NTtmh0pcJd4qKC416FXhyOSoJh4qOCUtCdr
z25NghfEQwXfaeuPenIvBST12QNWwZVJpde112aCFvEYj3Wnoi4FueUBl3iM
x5ObzHLjhEWwmniMx4A1p9SC5lVAMPEYj+7n4/WX6tfADeIxHs00Nm5PnlEP
2cRjPG7Usjh7LaAJOonHeNwk7MiQO9cKv4nHeHz76uqUbaEdMJ54qOIFw+tZ
+RN54Eg8VPFN1oQ7M5fzYTHxUEXvs69+ztsqgADioYrvnUfoNs4VwiXioYrV
E7eMUhgkgmTioYoch3N5K7aJoJF4qKJBjYdHY4wI+oiHKm7fcjFb+6QI5ImH
GgbLJhruMxCBJfFQw2wPjYQvO4Uwl3io4ZrASZXDAwTgRzzUcER/j+RjJz6c
Jh5quF/hTEFlTBc8Ih5q+NPugkd2RDs8H7gA4ruVR/uPb2iBd8RDDeMqmj45
ujbCCOKhho1lQ08YW9SBIfGYgCXOS//cn1UN04jHBFxZ7hXd6VkOG4jHBAyT
GNzzPaoIQonHBDynW7ar80Ie3CEeE/CO3M3jRvezoIh4TMAa+dX7m0Sp0E08
JmDctvBZlyWTQYJuTEzA2sohWttckgbWt6Q6zhIsW/86PxnUaX/UUebS5D6H
wnR4xO6+pjreid1xY4laLrjQ/qnj6QnPF8COQqhkX56jjmo7bk/Y9LgMltL+
quOe0u8fdk2qhh72/K9Sx48Xze7M9677l291NErpVGg51QjDWRxB6lg7rsvm
zpMWuETHo45nFs0pfv+0HXTp9ok6nhvlG3opuAuS6PjUMca8XVqXmS/d2c1l
qqNt6ZEVz7UFUE/Hq45FsU9zbo4VDlzf2tXx4HnJKy11QvhM61EdQ4qmb8xf
KIJgqovq6D/9R2fEVRGMpvWpge4CpZMazPfXWbxKGjhtrpTz6VkiMKH1qoEV
ckOl3zwVQiZ7uHYaqNBm5xVeKvh3fdfAmAtTX2ZF8aGN3dxCDRzrOKsx2oUH
G2k9a6DYvFsb7uzpgB/sct2hgU4vOyXfzmuFUFrfGvjL3/fOTv0mUGR5nGP2
p+yOTN/oerhN610Dh3yc8r5kQs2A355pYFz81ffdlRVQQOtfA1U/VijKvCkG
T/ZwazTwWXe18fsH+SCgPGhgluOO937mOeDHbu6jBs737u2TZOaRgT44EWO0
5Me1xyYDLf9RE/F0aFbCaWa9DCzviXhn4d/k0fLJ8IDlYTIR18dji+rSNHCi
/EzEDBPvo1KyOVDO4pjO/Dxc9raSSgEspg1ORKO83LJBKqXwmj1cn4kodUG0
WrH6OeymfE3ElKd7A2r21A7MN8cnYk8kfEiJbYALlLeJeL9/SsfQyuaBvnh3
Im5RONn0sKUNEmgHJ+KuI23Lo1I6gcvyKJ6IhzPKnLrv86CW8jgRP412l7jd
xIdVLI4XE7HE4daH6Y2Cf/PdRAxxvmzw+6YQDlA+NHHS5ggxSTsRjKR8aGL1
9P6tt0+JIIryoYlPT33Z1Mpcb4woH5pY/tjql9gWEaRTPjRR4c4IpeBXwn99
UhPDeuOeH5MXDsy3qzQxSGH1xbCffFhP+dDEO/+tmRd6lwff2PHqgCZa5C3y
jl/eCUcoH5ro6/VwWgu0gQLlQxNvJZuFTpFrhluUD+b/v1lvJ95bD5aUD03k
Jx95EvGl5t98r4li3YUrEj2fwxzKhyZecF2vMNqtFHiUD02ckPxp5Jv6goG+
+VMTf1g8KL/J5P8P9Skt3Lb+gMyDrRlwgvKhhatsTyYf9UuB8ZQPLczZs3av
15YkiKd8aOHWJdF9T5i+7UD50MJRCzOuV+imQinlQws/DlHeFWmbBV6UDy08
qnHlUlR9HrykfGjhdJP5lZcjimEn5UMLg9+PU1imUgmSlA8tjBJwPt2KqPnX
R7VQPHrUuOtp9aBJ+dDCWxynt0e6m+Ap5UMLx3KSNf70t4Ir5UMLUyU7OkSv
O6Ca8qGFbxQ9HlvP4sEKyocW7su2Fzt9mA/vad7VQrd6v+CzZwSwj/KhjSPu
typN3SyEEZQPbbw/QcGrf4wIIikf2rixou30l70iMKB8aGPp3rjnU5l5hvrq
dG1UbIr1PHtYBFMoH9r4Naxnqq0iM99QPrRx7yX3sdMWCeE/yoc2nthzJNFp
rgD6WB7HtVHStWtJ0kim31E+tHGqS/q70S5dIEf50MYDey6NS9Vrh5uUD21M
0nV3cPndDOaUD23Me92xa3hTA+RQPrQxa9Fay66KWphF+dBGnbidDXrCqn99
Vhu/b1xvO/JeGWymfOjg2QlXecOkiuAXXRB0cMt1BXvJ8XkQRvnQwfanoz4U
v88EZcqHDsbJvw2sXpsKcZQPHXw/X36cYXkS2FE+dHC5XFTLNGYeLqZ86ODm
tqE1YbopsIDyoYMFgcd/LdifAd2UDx28HbTzikRMLmynfOjghpJ7mfUqRSBO
+dBBnVvJnJ1by+Es5UMHbWz8J0UxfVCD8qGDqbXjs7CqDh5TPnTw4Rp8n9Pf
CHQBbNfBlJ23965RboXnlA8d5M1ykX2p0AHLKB86ODhg1vKo9i54S/nQxbPy
MyKyTPkQSPnQRT3ZX29uThGAFOVDFw/p3dHvsRDCZcqHLpq61h+pY64PepQP
XcwWD/oav4aZbygfuvhs9ezi60xfmkT50MXJD1q9/C+IoIHyoYtu+dxkJxDB
GsqHLn7JmGv99aIQelke53Rx5ErTXT9vCeAg5UMXe2RnKS/z44Ms5UMX30rK
OD8YwYMblA9dvPXm/R2z0R1gSvnQRYl1d/njXrVAFuVDF1t9w6+3ZDbCDMqH
LpZcEjt2MK4O2ikfuijZ+7Htc1Y1+FA+9PBQXoLVedUK+HmI3UE9lBikwU2c
WQzHKB96+Kfk5LUmg3wYR/nQwyPGxyI3RmTDHcqHHkor/zk++1Aa2FA+9HDE
1c8e8guSoZDyoYd+J4pN2L49j/Khh+Hl/Qc2L08GIeVDD3k31uRJ/UqDbZQP
PZw4N9dv5vEcGEz50MOd5xUjNqQUwGnKhx4OuRf1c019KUygfOihxSl3DZ+r
VfCQ8qGHjbLvXv7orgVnyoceVogEy17JNkIF5UMP7x4x7n5l0wJLKB/6iB8+
GgW7tMMbyoc+bkmWOjh2bBcEUD70UUtZ4r+fjTwYRvnQR/Hwwr3Wv/hwkfKh
j8dz4scc/yIAHcqHPibM0lmqlSaERMqHPoYu73ecN1kEbpQPfYxedTBhPrM+
6igf+vhlxqInY6JFsJryoY/GMyffq1kpgk8sj2v66Dtz8t8b1UIIonzo40Lt
FecSPgtgFOVDH48Z1FkurubDNcqHPv78IBY+YTcPjCkfzPcjDjgP+doBGZQP
fby8/JBUQl0reFA+9BEmb5BefacJWikfBqgVu2N4wPF62ED5MMAjwTHTv5+p
ge9L2A0aYLbPlkMPrlXCUcqHATbxR3/qvVkCYykfBsg9c1lJwaMAYikfBqh7
aKS07aMcsKJ8GCDna/aV1Ip0yKd8GOCwJZ+nnh2ZAnMpHwZ4Y96LJ3lzk4BP
+TDAgrjIgB3M9Wcr5cMAP6xae736USr8tWDzYYD1uslvLeSz4STlwwBrw39M
er8+H1QpHwZ47kVD0+lJJXCf8mGAnQXcPz+FleBI+TDAKsfjz6z+1EAZ5cMA
3brw0FTdBlhE+TDE36fGHiuc3QyvKB+GWMx5/uHF6jbYRfkwRI8hZTyZaZ0w
hPJhiEHlegGiPTw4T/kwxMp7Cmd64/mgRfkwxH6erLDliQCeUT4M8UnJxZSH
R4TAoXwYYtmmrdMztURQQ/kwxEsf9tjPOCKClZQPQ9SbqzB3HeOnDyyPu4bI
vTl4bligCPZTPgxR+Qbv4gExEchQPgwx6fQmjzkOQrhK+TBEPLtSapWBAAwp
H4a44cWy9b+7eJBG+TDE8cr2gt1NnTCV8mGEYgu02jdltkEz5cMIhQ+uyRmc
aYZ1lA8jfN55JHjX5gb4yvKwNMLb2qZLjqyvhcOUDyM02uC+aat+FchTPoxw
oiAlxky8DGIoH0bYNsTv2+6AQrCgfBjh3q/qHZ9u5UIu5cMIL92+PzLBPhNm
Uz6MMF27ayvvQwp0UT6M8Mrtby9jriTBFsqHEQYtEd/5YWMS/B7O5sMIdysM
vy1+MQXCKR9GaDOm0oLLzQQVyocRZuQfhOHGeXCP8mGEvxVOm1cVFYE95cMI
Ww5sL0ixrIASyocx2o/U9y1SrIGFlA9j3LUbpsc61sMLyocxhjhkC+PXNcEO
yocxdjiJCnMPtoIE5cMYb69xrzHc3QERlA9jnG0fZ++pwoOJlA9jLLRr/JK8
kA9PKB/GuGdw+6b0jQJAyocxpoyN7Fo8UwhVlA9mez7ec5t/CWE55cMY3y0O
NDm4VQTvKB/G+PHzK8s9zPy7l/JhjPPhyPutzHwsTfkwxsSOdvlTxiK4Qvkw
xmvXzifkBwpBn/LB/L6Lv5b3AQGkUD6MccfMrX2ubnyYTPkwwfmfVxyJTuiC
RsqHCeKdIZMOxrbDWsqHCX4b+nrr6cAW+MLycDbBD8q/vn+a2wghlA8T9E2L
uqfCrYMxlA8TPCLhpu27ohqiKR8m2Hra5v5KZj4wo3yY4Jm+6DOCpCLIpnyY
4CuB7uTb8Xkwk/JhgqPOamj4V2RBB+XDBOOV2i3rfqbCJsqHCZb5D+G5jk6G
fvaGabEJLlwuZvfAKQmOUz5M8KTixtI9CcmgRPkwwZkhs6Mv3EmHu5QPE1wZ
PnV+zbBcsKV8mOLdxMtHfywqhCLKhyleNtK+U3m6DOZTPkzx9+td78G6GkSU
D1PMe2xwwHdOHfhTPkzx6Suplpf7GkGM8mGK7xY8lbK80QJnKB+mWGUzedj6
m+2gTvkwxVhvkfWybV3wiPJhipWVY88vHMQHF8qHKbZVLZ78aYIAKikfprhq
buHlFlkhLKV8mGJCwo0MN8YnPZQPU9SymWccMl8EeygfpmixeQS/NFIEwykf
phh058nMz0zfvkT5MMVb/c2e2nNFoEv5MMW1I2La3ZOF/3xqhs/XzHp5pEoA
MfS4xwyP/W6aKRPLhx46P2Z4dPeYTd2TeGDJbn+8GQrrRHvnhXdAIJ0vMwxX
Ut8nta4V8tnXMzRDlRsRmpscm0Ca/GuG+ydPz3edWA+e7Os7mGHTWUUncbMa
iKTzaYY6n3hHQnoqBuaLaWZ4rfzFfDuJEjCk82uG77VPb1MuyAd/drksYvYn
48VPZW4OpNP5NkOjiSlbZpmlgziLe70ZVtxa76TIrAcPOv9mOIGXMDMOkyCC
3dxuMxQ4/k1sGJYMbcTDDKFg/4U7nDTQZE/3UTN8WthuVvwze2DeOmWGMfMV
E5cMLoBn7Hq7yGyvtLly968S6CdeZpjvEnZ06sPnwGXX321m++lLvIduqIUw
4meGWRKVGUkRDVDHrsdEM0xJ17+/LL0ZVGgeMMOfwLlaV9IG3iyPQjPcBNV/
e+92QjzxNcM7Q6Xu1cXyBubPejPc3PWsbm8NHxyJtxma+NcsMKkRQAjLQ8jw
yevOH35dCOXE3wzjd98dscxaBHL0dgYzTJghNtLnpAiW0Howw9baFFXTWyKI
YQ9XzBxfrauKHcVcj3ro+mmOFgtf7Z/3VgiW7OZkzTFst8GGYcrCf/O4Oa6K
zfnjP1gA+XS7xhwX/K66EfSYB9I0vpnjNeP4z998O8GT5WFmjs/MP84vmdMG
kXS9NUepFuFjO+1mELI8wBwHzXcU3yLRAIZ0/TVHiQ+PVaUka8Gf5THLHB/2
yQb+9XsO6XQ9Nkdb411dY1eUDvST5eY4t3T/M9W3BeBB12dzlDk9ftc+81yI
YHlsMcd7E89/fhCeAW10vTbHjSvGjKo5mAKaLI995jjx41KDdv8k8KHrtzk6
3GyunXomCZ6xOMLNcVJF2lOnManQT9dzc9y98mnyC7ks4LKHe9Ucnd5Ev1ic
8a+vxZij2qQfQzV2FkMdu7l4c3x/S0fK8GfFwPPLZ+Zoc//vh8/BNeDN8kgz
xznPw6qO3K2HeLr+m+Mx+dikG3VN0MvyKDPH67GZkiVvWsGRfMC8/sto9eKW
DghhebSYozV3y5iuyTwoJz+Yo8a8DXrjDvAH+usrc9STPrRyfLgAlpAvzDFy
34g7feuFEMPy+G6OVREVdW9GMfzJH+Zo9sw5dzIzr9Dz3qEWeCgj1FuTmWcC
yScWeNDpXPq4oyLIp8c1Fvi0QE94SJnxFfV3C2xXT706a7kQPFkcOha4PXTN
jTwvwb8+b4EvF4aqrB/LByF7uNYWWBo378LwWV1gSPOZBY7qO7Yg1KEd/NnN
uVvgmKqKHodRLZBOPrLAH6uct8a+agBxVjfzLPCJRO/42I7af8/HLVDC4/T5
iYOrIYLl4W2B9y1/S8oXlUEb+coCLa+PN1kzsWjg/oa/BY7OXNFsbJYHPuQv
Czzhve7SI5kseMbyOGiB15W+nJi+h+FPPrPAdduP5JjXJwGX5XHGAgOfVPlk
eSRBGPnNApfK9VoZjE2BOpZHtAXuf2vmnbM8A1SoL1lg2AO3RZfCcwfeT/DY
Ak3cf4g3/i0cuN+TwmxPxtVpzuxy6GVxZFtgSGZBlGNUNTjSvGiBWroRjlMy
6yCEPdwqC9x0/IdTzetGKCc/WuDuMY7+YsNbQY7eTmaBz9suLgmS7IAl5EsL
rN7VK3aysmvg+fV75vuX8t5S+sz1n/zJbJ9v/r2bIxi4//XbAp1rFConmQgH
3n8haYmzJR8MX98thHzyhyXujI0tu7ya4U/39ywx1Sa0aRjTtz3JH5aoI939
dO9F0cDzak1LVFkpFSjNEYGQ/GGJ5UHf8ehVIRgOvGEP/VOmlarHC8Cf/MF8
b58TXrab/+9+oCV+lUzWEVPggTi7XKYx+wOz4l5odIAH+cMSL/vttzL42TLw
fHqRJfZKbnr7qKoR2sgflog7xhyNTqsDTfKHJdYVtVzpfc70bfKHJV70XVUd
71ABz8gflsjNeWg6ZX0x9JM/LLGx/3jlEswfuD961BLBIjVqZmL2v+fRlvi6
bcickVfToI78YYlnH1xSjV2dDCp0P8USB1dutz3O9G1v8oclSt7zq8c5yf/e
32OJMqHZPrd5adBL/mDOp1J4fsmOHHAkf1jiHJ5m9reogoHnz4WWuPqT2pLl
iaUD94srLPHqI9MN8/dUgRzLo94SH++b1aFVXws0/rZb4rk5Xd4f/zYALReh
JX6oSnBbrN0CdPnrsURV28n3qozbB94/2cucD7uX0TeHdA08b/5piVs3ZEUP
q+YNvB9KzAoPbNe8bvaVD9J0/98Klwmt/kZ8EAzcP5e1wkfT6kOXJQkhkvxh
hYGBZW/b3Rj+5A8rbJ07x2XWeREYkj+sUMsyf3A007fp+bKZFXa8bPpP1VsE
6eQPKxRe1Zn5rF4I4uztdrRCOxs9603fBf/e/2eFAfuOzvNr4kME+cMKm9d8
k3AI4v17nmCFP0p2JO8b2jnwfr3lVnjPLPNNUnfrv+fJVjjaiDtjbmoTPCN/
WGHa00Sfusj6gffX7bDCiZuUNs6+WQNc8ocV3gjdJBGTUQlhdAKtcMwQlaTT
mSUD74cLt8LGk3velK0qABW632qFM1rSXwfl5gw8X7lqhbvuT/Xwf5kO8eQP
K/x8Sqlhs1oK9JI/rLB0695NjxYkgSP5wwq/XXtzfEpeEoSQP5j/7585dful
VCgnf1jhyI+aOxvfZ4Ecy6PMCvXfDBf+npU/8Ly4xgrv3xyhHqVXAjHkDyus
HRGz8FBe5cDzJj5zvnUc8gPe1oAl+cMKXzkvGOqi0ACB5A8rfLp8Z/dvl2bI
J39YIXwuyu1g/C5Nzz+ssXqeX62eQ+fA8+Gh1riv/53uI38eRJI/rHHyZ+Vl
0cy8KSR/WKO/Vv2qE/eZvkv+sMZyteOPQg8KwZ/8YY2VU671dWgw/Mkf1rhF
b9mBhkMiEGefB1pb46//zJz3MH4aeB5sjYbKvz/P2ieCCPKHNa7PlR8iPUQE
beQP5vdXBV0/CULQJH9Yo5mvkaa8uQB8yB/W6Jm22rTqJQ+ekT+scfx+hegL
rzqhn/xhjUPmaF+fUtU28PzX3xrFa675qsU0Qxj5wxofffb++2M/M/+RP6wx
QcE4WSugFlToeYw1Wm38JqszpQq8yR/WaP7p1MJ0tTKIJ39Yo0ro94pJZwqh
l/xhjYvF+5oDU3IHnvfetUbrWYMVnRdmQgj5wxqPn51l2y7G8Cd/MPs7bGjL
kJtJIMfiyLHGa38/uF9amwRLyB/M8Y7rfhUXkgIx5A9rnPErOC5BIxN66IJg
jbp6/SopCnkDz3c7rdFO9Ym1/L0iCCR/WKOD+Ze3w+QqIJ/8wezv1zGr7YbU
gDQ9n7VGObeC8Rf1mfmf/GGN4SGD/6TOb4JI8ocNZgU87N7s1wpC8ocNKsMe
Tf66jn/Pc23w0Uabi11yPPAnf9jgffdhjqpzmOs/+cMGnxg1949fKwBx9nms
oQ2meh7jtUwVggddsGyw5MnrYed/CCGC/GGDP5+UmUdtYfiTP2ywzuNysQLT
tzXJHzY4Ua4y++lpEfiQP2zwwfTaDRfNRPCM/GGDH8cZtRwLEkI/+cMGc/a+
00s8LAAu+cMG/U6uuvrcgw9h5A8b1NXYPNq3sAvqyB82ODt5+1hucjuo0PNa
GwyriLS9eKIFvMkfNvhy3B2z+2saIZ78YYOdafFzR8+rg17yhw0O3lxVbu/L
+J/8YYMH72fLfQsvhxDyhw2++aB6QVhVBOXkDxsUrPrgEpqTB3Isj0QbVD9/
fFPv2yxYQv6wwe/Wt4eOlE2DGPKHDaa9zbQ1VUmGHvKHDZamz3S3dEwCS/IH
s39yslOWxyZDIPmDOf9P13m5HU+HfPKHDVbAAtjUmwPS9HzcBts9pqvUuhSC
J/nDBuWHDtJy9yuDSPKHDf42+XhppFY1CMkfthi/sWBsONSBIfnDFm8vthb/
6tMI/uQPW4wLNtuffpKZ/8gftvgm6tiltjPtIM4KScMWl+76Yq/s3QUe5A9b
VLOb5RPygwcR5A9bdMjpezxSWQBt5A9blG/7aCklw+Sf/GGLqtsGC+9WCMGH
/GGL9Zl2lo6eDH/yhy0+vHd00bcrIugnf9ii2UXFmNQoEXDJH7Y4TAB/H80T
QRj5wxZXp69zvpguhDryhy0uinf+uqtBACosjx22GG56u8PzPh+8yR+2eOXQ
Rz3NWTyIJ3/Y4mJzk+4fUR3QS/6wxfXqFR+1Apj5n/xhi1nWbrkrZzRBCPnD
Fnc0WruftqyHcvKHLUZYp153xRqQY3nE22JrdfBc4+GVsIT8wbz+nxfb/NWY
6z/5wxa1uuylF7fmQw/5wxajglaltM7LAUvyhy0+ybaWrpyaDoHkD1uc6Vt7
9EReMuSTP2wxaZt8lAQ3CaRpQLDFVJWnou7fSeBJ/rDFQ7yOOfv10yCS/GGL
zbFHr+TUZYOQ/GGLaWfPzUh/mQ+G5A873LIxZdKQzhLwJ3/YoWnZ7PDQcKb/
kT/sUP1yZBYsrAXxW6w/7HDu7ZPhz4IbwIP8YYeKYRdjH8U1QwT5ww4dD2y1
+pzcBm3kDzu8NK1/H+cy43/yhx0+zdpllHmNBz7kDzuMtCn/MqOcD8/IH3a4
Rqvba3iFAPrJH3boezth0qhIIXDJH3a46obfjAcWDH/yhx02D5qoo3tCBHXk
DzssyE4O3MP0bRWWh48dajr3jByzTQTe5A877P728IbqRyHEkz/scGhx3cN9
E4TQS/6ww4XZWdnzmEXmSP6ww8A90ov9U3gQQv6ww3ecjxedgzuhnPxhh/1r
aucmeLeBHMsj2g5VzS4p6ts2wxLyhx0+SAuoaGN8HkP+sMNw3yeNhxVqoYf8
YYdiFee1vU4/B0vyhx0q23tmmO4phUDyhx2Ojyy5/Z94IeSTP+yw1fPNka1u
uSDN8miywzy1rOTuuxngSf5gfn9jY/DCcykQSf6ww0TbexExAUkgJH/YYePX
l8VGx5PAkPxhh/zUsF/ff6WAP/nDDsfE7Pi962MmpJM/7PFu87VKq1t5IF7J
+sMeB2uGzcjwKgYP8oc9ztpQ1yzeUgER5A97/GCZM5KztQbayB/2uHXQz+8+
F+pBk/xhjwsezepNyG0CH/KHPVrc+dN7rKUVnpE/7PHp2qaA66Ud0E/+sMeK
8aMeHUQecMkf9vhM73ndZaafhJE/7PHsrQPq148IoI78YY/hq1IDrqwRggrL
Y5U9Hlm0p79mBMOf/GGPMnu//jkTIIJ48oc9bk49saiXWS+95A97fBuqm30u
VASO5A971D4jYVaiKoIQ8oc9Sg3/0OHhLYRy8oc9Zp87P8Z1hQDkWB4X7bHN
a0uUvBoflpA/7DHn+R2vXyuY/kf+sMdPa+a2zZ/eDj3kD3sM3nN3s71GC1iS
P5jzV3VKddJPZv4jf9hjt1jd2G3vayGf/GGPtw4eKkwdXQ3SLI8K5vzEnbQ3
FZSBJ/nDHi+lN3U0ORRBJPnDHl/Bset+bnkgJH/YY23m+Te1RllgSP6wx0N7
pt8ZfioV/Mkf9miW6jX6QEcSpJM/7PGElLBu/5QkEP/K+sMBW80nXhkvmQIe
5A8HZj7xCtkHGRBB/nDAeM5z8bk7c6GN/OGAJxNGzf8qLARN8ocDPkVZHses
HHzIHw5o7vxNmh9WDc/IHw7o02T0dW58HfSTPxzwTHLCfn5TI3DJHw64WUsu
KupbC4SRP5jtT1hxTL6vHerIHw44IehN+K6sLlBheSx0wNwL5nlzJjLXf/KH
A14vT8zTdBZAPPnDAW+mt665qs/kn/zhgLcKOlP7+EJwJH844KwQuUFBKxn+
5A8H3K982nfDdRGUkz8c8HHfhZt7L4lAjuUR7oDjXCwfVDN9awn5wwGn25ge
GBUthBjyhwNyJSZ0wxMB9JA/HFB14YIXFkF8sCR/OKDyqnWO81R5EEj+cED1
mirHSMsOyCd/OOD65q5k5xGtIM3yyHPA4mODV4bxG8GT/OGA15yfjiopr4NI
8gfz/c69zb87Gf+TPxxQ64B+QvPCCjAkfzigns2ySV+Ci8Gf/OGAkwzOl/TP
z4d08ocDNt0ydvRtygbxCaw/HLCvvC9eJiENPMgfjnhP+dX9vb7JEEH+cMSH
74dEatonQRv5wxEr5Y99/c8tGTTJH46o+TJx3rnCNPAhfzji7tjfJutX5cAz
8ocjGucc+RATUgD95A9HnBw5qn/ThVLgkj8c8f6m/k8eXlUQRv5wxEIXv9Y5
ebVQR/5wRIUbGd++vmsAFZbHdEd0MpBbWCzHzH/kD0fct+37QUXVdognfzji
+t0ndXW+dUIv+cMRbSxCk2VLeeBI/nDEgi0lzdof+RBC/nDEjAXjZ1x8I4By
8ocj8rct/+/UUyHIsTwOOuLet5uuLuMw/MkfjhjllyON50QQQ/5wRPcbJ4u1
b4qgh/zhiH+fmcctXysCS/KHI84Y9V0rvVkIgeQPR4z7vn6e8h8B5JM/HPH9
CvHYoE6m/7M8UhxR2Vghc2YoDzzJH46Y9sKx7d24TogkfzjiuE9iLknfmPmf
/OGIERrByClvAkPyhyOuvJBoZ/agHvzJH8z2z97DB09rIJ384YjJkdXfYlsr
QZz9gOZ7R/Q/0XvEpbkEPMgfjrirQXHC+d0FEEH+cMTRbbnegrocaCN/OKHN
Be3Lq8UyQJP84YRGI/adO2ySAj7kDye8VZX8X9fiJHhG/nDCMSu0U/9LTYJ+
8ocTPt1nemBNcCpwyR9O+HnZlLM5pVkQRv5wwjdNXocMbPOhjpYz83oxxUpZ
UiWgwvLgOOHUqK+BStGV4E3+cMKMVX5nclprIJ784YRqjg9SzcQboJf84YTq
nPmHzY2bwZH84YRjHWR3V2IbhJA/mNfPUktwMGD8T/5wQqlYrT3bN/FAjuWx
2wnFXpWPnnqduf6TP5zQNHSPisMdAcSQP5j9mdXkuGS/EHrIH0547KDEqa9q
DH/yB3O8k84Nnx8igkDyhxO2/af0JITp2/nkDyecNE7WXeqACKTpA7NOKPP2
qFn4cBF4kj+c0HHWwfg8NyFEkj+c0CWF/yTbVgBC8ocTDvF/GxH5gQeG5A8n
nHirSOLhj07wJ3844fvwz9IT+W2QTv5wwnMGq3hyic0gzr4BU8gcv7HsmqDT
zPxH/nDCu9slZ5Yeq4UI8ocTuh+6ofz2vypoI384oc6Q5NZFDmWgSf5wxg9L
J4QZxhWCD/nDGds3TLkzoSIXnpE/nDH9Sbf/3+2Z0E/+cMZ7QaMVFMcy/Mkf
zpg5dm/fw7gkCCN/OKO/hMz38JVJUEf+cEbVFxM6Y7amgArLw84Z00xHfA8Y
lAne5A9n1HLLUj/xJxfiyR/OaHz9WvLuE0XQS/5wxqw4911bP5eDI/nDGTvr
Jr998qUaQsgfzuizQlAWrsjM/+QPZ5wfsS2vhNsEciyPLc6o3vKzX3FlKywh
fzijhUuJ2tmFHRBD/nBG8bCI4vUjeNBD/nDG30clfPZPY67/5A9nlK87eSWA
mScCyR/O+EjdRc3TXQj55A9nvNzqo+/xVQjS9IZYZ1TWnlT4eBPDn/zBbC9S
MDiOub5Ekj+ccfkftOg5IwIh+cMZw12vGV6wFIEh+cMZU9QuaU0+LAR/8ocz
7uhf0PU3TADp5A9nXN05RGyBJx/E2Q+8tDjj7rSLu2wamf5H/nDG6K2dTYNL
2yGC/MG8vtEW3+vXW6CN/OGMEd2x6Rt3NoIm+cMZPaIs4qTX1oEP+cMFb7km
KMgcYPxP/nDBrQ/3j78ZVw795A8XNGhaZ/frVRFwyR8ueEbL4PKhhjwII3+4
4FfV7toHMtlQR/5wQaW/l2aF6qaBCsvDhNle0JfLq3SSwZv84YLdM44ESDgk
QTz5wwX1u/98i7iQDL3kD2Z7kcfHu21OB0fyhwsuNVPwMurMgRDyhwuW1WqJ
lWoWQjn5wwUhOHhP7ZwykGN5eLtg7+x3rcIx1bCE/OGCqHvGM964DmLIHy44
0/7oDvHFjdBD/nDBtfu/+uI+Zv4jf7jgzQvC+VOD2yGQ/OGCzlV/t1V5dkE+
+cMFQ14e23/vMw+k6QNILjiu/9IJHXkBeJI/XPCl/9CDVsOY/JM/XHByUMPg
IaVCEJI/mP3/XLWtZzbDn/zhgjvt81zHM33bn/zhgvWOV47uuiaCdPKHC3Za
jrAxWygCcfYGdJULht8SV+vMFoIH+YP5/fjNW1e0CSCC/OGCb34KA88+40Mb
+cMFdZxsvixeyANN8ocLrj73dtvFRx3gQ/5gfm4hae0Yxsz/5A8XjMxq85q3
ogn6yR+Al+4k+/Lc6oFL/gCcr/Lle8jsGggjfwAKsGOsUKcS6sgfgF8myNhn
2THXf5aHJmDbb92i+x/zwZv8Aaj45/73x//lQDz5A3D5qNDt+73ToZf8Abjy
0KE7LjXJ4Ej+AMyWnDzrpnsShJA/ABPGDO/F3iQoJ38Afo2uK4genQZyLI9F
gIMasuUGP8iGJeQPwLjVfl52z/MhhvwBWNEyVy0uuwR6yB+AbzPr5tdvZPof
+QPw4Jete/a410Ig+QNQaUHPtEe+DZBP/gDsXKKf8PtiM0jTAwHAwughx6Xu
tIEn+QNQKHE7P/QY4/+BP+eAXkkVqdEXeSAkfwCOCtZerlTIB0PyB+DN1ovv
OooE4E/+ALylK3tf5qIQ0skfgLssD2b3mTL837L+AHxnnpjYGiYCD/IHYPKN
9YczmP4UQf4AXOxz0U5quwjayB+APxWEQe29QtAkfwA+1seY11pC8CF/ACae
P9xlPEoAzwb+HAA27D59dGUOD/oHPh6PLyaFr9t7thM0Aunj4ti5K2tx1I42
KBz4+DRue72hRWlqM2wY+Dgx7nrn8Wy6bgPI0HpBPLja9NcQnVp4wp7v0YgF
cWOjsh8+h/m0fhArFCa9WHy+FH6wOMchFv1QVStULoQoWk+IGVMtDPYuzAVX
loc6Yvn9iPvzCjOgm+YTxNtawTNVbqfAMfZ06iJuLbMWPjyQBMa03hDPxcCr
xSFJUMNeLkwR5zQdCxr8KgV2DDx+w7KoZpdZlZmgdItux+FkQSUahudB5sB4
jilvGpkxtBhWDcQVjRJKF79MrgBJWp+IWtfdLM8ur4E4lu8k5vXNZ22feage
ZtB6RTwusWR//qMm+MQe7kzELTNyi7glrXCe1i+igU9k/ubUDrBn+c9HVP1W
4a9uz4MOmocQTc1ke+W38SGYXQ/LEH13+D1RDhaANq1vxHW6V0JsVwqhlOWx
ljme9IK8x8w8spnWO2JCYhfU7RKBLMtjE+J5G5W4VGa9JNL6R9y7L3fRkOMi
WMTy2I54tGOkyWANEfymPo6otDOgxWW9EKJZHnuZ7We5jExZKwB3ygfir0Nq
L9O1+fCa5RGCOOhi8OTXW7vgBOUFcfy21zkay9vBnOURhnifN6/L3rIFGmj+
Qnz+Me9mj3QjBLA4IhBP62x2n/S3FlQpT4hXezrVFqtXQy7L4wqiy5Xviiv/
lMFayhfiWnUd8zWeRTCc5XETMe7h4LJqrzx4QHlDfNs7fabF9CyYw/K4h3gk
3lp92K1U6KP+jzguqGq63MskuMzyeMLs71oRhjPXG2fKI+K7D6/kvb8kA5/l
kcps/6nmipPqGXCY8om4+K5XhPnKXNBneeQiJo1NumFdUgiVNO8hKnDfyXqM
Lgc/lkcJYseB7XtP7KkGBcovYvPiK3UrL9dBKsujGrHOdND5T4WNsIzyzOTD
3a/F+kULDGavT83Mzx/YBsSI2iGW8s2s50sRbYsedcFUlgcPsW2DdfQ5FT68
o/sNiPWB3k5LmfnzDHu4LxmeH7eIepj8W1P+meO/VhG+t1MILSyPD4jLZq87
uXy5CPbR9QBxVeyNY7mMjzRYHt8QMx9ztf0vi6CQrg+ILZ9sZ4RPFsEG+nMW
iGJXDT6djBWCDM2brrjIt69yYbIAnrA8hrji4l1ofOEoH+bT/OmKxV5Vh2K0
efCD5THSFV++yg2Y6d4BUTSPuuK47uQwT7VWcGV5KLiiSJKnuqm3EbppPmV+
vkBvytf2OjjG8lB1RY21JmmyH6rBmOZVV3wBc/XG76iAGvq4hSueHWdenhpZ
DDtofnXFr0dGPE/2yQclloeRK44OUBRW/MiGTJpnXbFOwat/ZkUarGJ5WLli
JC90cuTeZJCk+dYV/7j7nx3OzDNx7OacXFFOeHcIzzYZZtC864p5Yhrh9ffS
4BPLg+uK15MuPzOakQPnaf51xWHr8pS2bCgAe5aHhyv2/C7PO72rFDpoHnZF
iZWTzs+0qYJgloenK449P7cw6HEtaNN87IoVxR4/+9saoJTlsdgVE+vf/TAV
a4HNNC8z+2O9OsJrRDvIsjxWu6JQMvrDjZedkEjzM7O9JRsuKOTxYBHLY6Mr
eoWIlBTe8OE33Y9xxWudsu8jugUQzfLwc8WF1vAq9aEQ3Gm+dsW7c/2wEUTw
muUR4IoNukXyehEiOEHztis+Uz38+wYzD5uzPIJd8ahMqO/5dSJooPmb2V6G
1aGUdiEEsDxCXfHirqAvWeJCUKV53BUt3r7TD+3mQy7L47QrLrkvSF92mgdr
aT53RT93iawFTB8czvK45IojFvSoPR3eBg9oXnfFD3/DxS06mmAOy+OGKxrU
95w+lVUPfXT/xxWHGjt/GplfA5dZHneY8zcq/lrS90pwpnmeWS/T317//bkE
+CyPR6442Gn7e/9TBXCY5ntXPC4bGrfkRQ7oszySXdFo1sGGo6oZUEnzPnP+
Ro8rbnFJAT/6c02uOGMGp2zuiiRQoPnfFc1PBMhXP06CVBZHEZMPlwiX6I2p
sIz6gCtmWG+0+HQrCwaz88JzV3xsHqiyXS0fYqkfuOKazl33et8Ww1SWR4Mr
uk2cxE07UAnv6H6TK36RjhYfXloDZ1geHa6YrLQzUONTPVhTf2D23/OI+0qV
ZmihP5fkitPLJN4nmrbBPuoTrjj+tesqrjLjf5bHW1fUHma43GotDwqpX7ii
f+31yDeX+LCB5fGFWV8z3w7iRQtAhvqGKwaYqM3W2SOEJyyPX0wehU4yQ8eL
YD71Dw5qKf59Xh4sgh8sD3EO3jObc4ft21HURzjI3893SwsSgSvLQ5qDSVqj
x4rLiKCb+gkHuQ9ttr6bKoRj9OcUOHjt5MNUbxcBGFNf4WBw2Oyrq7/xoIY+
bs3B9l9/1LOlumAH9RcOmo146PTjcxsosTwmcvB5UdchqeJmyKQ+w0HpP5tr
pG42wCqWhwEHJ5TEc7ZfqQVJ6jcc7L+0uDzvcBXEsTzMOei5yd53xIIymEF9
h4OJN0x8dXML4RPLw56DHxunHejoyoXz1H842Kdrfrj/bCbYszxcOSg6NH7R
Gf1U6KA+xEG7lQW7rz5JgmCWxxQOGl7Jely5JAm0qR9x8NhqvZOflqVAKctj
Ngdrf96Uj+jKgM3UlzjIcTvgGvoyF2RZHl4cHLWbe/PX1iJIpP7EwY1hC7gf
asphEYtjJQfX3Hr5zUJYDb/pfhwHh0ncczwiWQ/RLI91HHyadHlMs3kTuFO/
4uBj1eBX2TNb4TW7OV8O7h1++6bL5A44QX2Lw8zLv9LeS/DAnOWxi4PpzeI7
27h8aKD+xZzfmouONYsEEMDy2M9Bh1qxE0XI5J/6GAe/PLK49/OzEHJZHkeY
8+t/nJ+xUQRrqZ9xMGi8aqclc30ZzvI4yZwP2WA3Zeb684D6GrO/gtFLwmxE
MIflcZ55/Y75l/uPCaGP7v9x8IXRhOncswK4zPKI4uCdM/uMmxfzwZn6HAfX
Lw6p/vaiC/gsj1gO8vZOjM1qbYfD1O84KHbHwC7uSQvoszzuc/B4UnOGcWgj
VFLf42DA64W1MjvrwI893AQO5ia06Lw+yfif+h8HpST8pVcXlUMqyyODg6cb
vqQYiRXDMuqDHJw0wvd05Js8GMzO7/nM9tduSL9pkg2x1A85aLKiYTXHJQ2m
sjzKmd9fM9ejxTwZ3tH9RiY/D2rFNeyT4AzLo46DM17cea8SmgzW1B85OG72
sU/nZ6dDC/25Ng4e2t1xWbY0B/ZRn+SgspKOceewQtBgeQg4eN/y1KkdFmVQ
SP2Sg59eGt/IHlwNG1gebzgYr++gUqlSBzLUNzk4r0ZLdvSURnjC8vjEwW0n
jmTl+rTAfOqfHHS071N9srUdfrA4fnBwq6dZ9l63LoiiPspBnZr4rIoeHrhS
/+Bij473c7uRAuim/sHFEWWJO70YXxyj/sFFrvlNmaWFQjCm/sHFmU/zBREz
RVBD/YOL69yFZ+2Y+WUH9Q8u8g3nfje8LgIllsc4LrZmvv0Wu0gEmdQ/uCiX
7xukXCCEVdQ/uLjK7+4iZ74AJKnfcjFo0m7T0jQ+xFH/4OLTBJ/G8BU8mEH9
g4sOMelOxrkd8In6BxfNN+munRHFzP/UP7j4Q+fbsMl+TWBP/YOLhWPEvS0W
1EMH9Q9m/76OWF+2sgaCqX9wcUWN1ZhYt0rQpv7BxbxdWwTjPEuglPoHF4v0
8pvGDC2AzdQ/uGiY6fQ6ancOyLI8ZnLxT6Fln/e+dEik/sHFX62vaw14ybCI
+gcX1+TjkYNTkuA39Q8uat77/OLFqySIpv7BxcnxIULZ76ngTv2Di9Lem0NC
j2TDa+ofzPn971RubUI+nKD+wUXrL7Y2q6JLwJz6Bxfdvq9KNZr6HBqof3Bx
7MLIwGTLWgig/sHFm8rDmuOWNYAq9XEuvphgmTj5SDPkUv/gYkTx5IDxF9pg
LfUPLsrzdj0oCmD8z/IIYXiLq7kGM/PBA+ofXDx5Q2JQVxYf5lD/4OL26/FD
7ucKoI/6BxePrzz0UiJCCJepf3AxKtbXy8ZYBM7UPxgejvcTDjP9iE/9g4sG
2wOt+5j+dJj6BxfVsqvVv+8QgT71Dy5mLk+bcOabECqpf3BxkXHwlOkGQvCj
/sHFS2XrV/9VEIAC9X/m/GZGmk0p4UEq9Q8u7upatjMhphOWUf/g4qutc0ND
jrbBYPb+RioXQ+8ZKUgvaYZY6h9c3Pn+RXOOXQNMpf7BRfVlso9P2NTCO+of
XCz+PVTLpvI5nKH+wcUsg9lXLz0uBWvqH1yc3bbV096iEFqof3BRsCDs3I2N
ubCP+gcXC27b6PfzM0CD+gcXPavT0senpEAh9Q8uWkrN8fhzOAk2UP/g4vpk
2Zn1e5NAhu43cPGMmLueV10KPKH+wcWJK4bLbb2XCfOpf3BRtaQ8E7fnwQ/q
H1ycc2bsI3O1Yoii/sHFn6bJbc0XKsCV+gcX3Z115Lun10A39Q8ujnm787vp
tno4Rv2Di17JFeLPo5rAmPqHG95uaVf8ltQKNdQ/3DA8pifIMq4DdlD/cMOs
URYKqeY8UGJ5jHTDIL9ko+M+fMik/uGGYyWHxZ8KFMAq6h9ueGxl9fTKJUKQ
ZHkouaHzpLDoo0NEEEf9ww1d/aveSO8UwQzqH24opTXmzk5mvXyi/uGGZtsM
KzeHieA89Q83rFrWMtxMSwT21D/cUDZG/o7eZiF0UP9www8hppd1NwkgmPqH
GyorvP24zJgP2tQ/3FD98m3X6uAuKKX+4YYvBu1p6/Fth83UP9yw0mjBKCf3
FpBleXDdcOXZgvLzqo2QSP2D+f2YXn+N0XWwiPqHGxpIuG4WN2P8T/3DDR3n
fHa4rVwO0dQ/3NClaWnhsE1F4E79ww0l9W7+mLY5D15T/3DDz34JspU+WXCC
+ocbTrm3bu7k1FQwp/7hhgFnv7e9+5gEDdQ/3HB4dZj2C04SBFD/cEOb5zO1
fguTQZXu57th8LtD4Z8HZ0Au9Q83HP/mT6fNtFxYS/2Deb3R84si7hfCcJZH
gBuee9P1bMPHMnhA/cMNDZ1WdOGGaphD/cMNOWYueX5H66CP+gfz+t+yNg1O
aITL1D/c0EHrqHx5fQs4U/9ww5PqxxWN69uBT/3DDTveeLVb3eiCw9Q/3PD6
9NvfauX5oE/9ww33zatedspcAJXUP9wwrCLe3VqdyT/1D+b7RUX7frUKQYGe
H7jhcbEb26yXiiCV+ocb3u15rCXL9O1l1D/c8Kq4q9PKKyIYzN5vfOSGhRMK
lrlME0Es9Q833O+/54rkPSFMpf7hhhfS74auzxTAO+ofbrh+zOn1X07y4Qz1
DzeUbvo24qMxD6ypf7hh0ZHF+wYt7IAW6h9uuCdtSpWPWSvso/7hhrWm56bM
lWwCDeofzHpV2DPP6H0dFFL/cMPnvXxv07+M/6l/MOst0HHbzrMVIEPPK9xw
daf730uJxfCE+ocb1h8OUDodnA/zqX+4ob7fzf91dO9xMaV/AMeFlvyE3JPY
lpDVki1qyffrcmbmzJlT65K0CiEU6ULIsrSEkK0oWrJCVktWaLpjVLpfpnu6
za3IbYXskvI78/2z12TmnOfzPPOct2HOl++HPISP5I8lONk2L7ZSlwFx5I8l
+L1d1hyD46mwkPwhPJ+ie9n8eXJoI38swYr29d/c/DYVwsgfS9BsgHLC5ogM
sCZ/LEHvbQ4/jnZ4CEryxxLUru2avdI5F4LIHwwO2L3n98JVhWCq79GPwYk1
h2d4jCyHbPIHg3taGg8lX6wET/IHg327HWVfCmvAUN9jKIPzFjwadOZNPSSS
PxiMHXEvNaq7EXjyB4N2y8Nrh9e3QCf5g8EDXs7WIzNVEE3+YNBbdnJZr1YN
DuQPBotuX68KU2mgmfzBYImq0qBZ6BtC/mBQU8+UiRx1YEn+YPC8znbpgCgd
FJI/GJzeK7o4/IoOfMkfDNq4NKcqvHVgou/hwKDpsEnbbqi0kEL+YHD+kbgx
PxlpwY38weCCJzlPj74U/E+Hx+CNuXkDN59TQTz5g8HV7XU70+a1AEP+YPDE
95///MusETrIHwwe9Km/Z/FPHYSTPxicrOo401leDTbkDwa9slQXgqqUUEP+
EJ6/ZIdDzegyCCZ/MJj+bZljmXEhmNPnOQwqV4yO2HwtFxTkDwYtjhm+fPnf
Q/Aifwh92h8v09pngZG+hx+D42c4Jvk4p0ES+YNB41DmkdFGOSwlfzB4nS25
dfi6HLrIHwz6XDx0bPqKdIglfzAY4Lyf3XLwPjiSPxh89F1e7BPDHFCTPxhM
uDg1zbE8H0LJH8Lxi3pDN60pBSvyB4PP4p2+LEtVQin5g8G8lfUzhrVWQwD5
g8HDYZl9jxvVwyj6/EgYj2d5vTETGiGd/MGgATcoZdEgYf8nfzD4sc+8R689
VGCg//v/BAbHXGp/GRqlhgTyB4Mm0572PXBBAyz5g8G0/5QtHUFaeEX+YHCd
592NQ011EEn+YPBFEvfYQfC0HfmDQTP1JFP9vydvIH8Ivx9W93rtrzrYT/4Q
zvewJMVvmA4syB8MXlBMfz3EWQt55A8Gl3lGOvZhNOBN/hDG/78HTpO/qMCY
Pq9icGzKEqMis1ZIJn8wuP7aNq6sfxO4kD+EHmMm7+vbUA8fyR8M1i456B17
twbiyB8MTu3DpVneqISF5A8GL77J8/7rajm0kT8YFL9Nc60KKIIw8geD5r4m
qT805IE1+YPBTpu6cynvFKAkfwjr12/STZvkbAgifzDYJ+zFcs4xHUz1PT4y
eC24/Y/ydDlkkz8YdJ5mFfOTqxw8yR8idFuxud9pLg0M9T0MRfh4575/v9zP
gkTyhwgHZqgDEysUwJM/ROjku0b9x4rH0En+EGHG9fs2ocnFEE3+EOHuSN4v
U1kBDuQPEX61iVtx6F0VNJM/hMfDDSueTqyDEPKHCHVLXh73cnwCluQPERZP
2H6qfU4zFJI/RHhoj02O5lMr+JI/RNj/zym8raMaTPQ9Zopwk2K7ctIKDaSQ
P0ToX9HHwna+sP7JHyIcMX5DyJV/tNBD/hChUfH/Dii26CCe/CFC+d5AV3m8
DhjyhwhPFna9hzM66CB/iHCbn+K/XQ46CCd/iBB/+cvhz1NasCF/iLAs5dCO
A+c0UEP+EOHL3nRLl/VqCCZ/iNBq7e8z7/7bCub0eZ4Ip37oGxv8sgkU5A8R
DulzPvleTgN4kT9EuH7XHNeu2Fow0vfwEuHw695vRwv7exL5Q4TrZrpPKrso
7P/kDxEqPcZOmasthi7yhwhPuOasCjLLh1jyhwgD8p6tLf3yCBzJHyJ8zp04
Ven8ANTkDxF6byiLne+SAaHkDxGGc68jYxxTwYr8IcIHHm9HhtnLoZT8IcJX
Sm7xh+BUCCB/iHDsxgHNDraZMIo+PxRh1krtF7N7DyGd/CHCdz+OOmXyOhc8
yB8iLFn9p+S7EUVgMErvDxEuXLk4cbG6HBLIH8L4LN+3vNOoCljyhwhbm6en
ms2phVfkDxH2kTIS+KkBIskfwnw4Nqts+LomsCN/iJCfsuuzhV0rNJA/RHhX
tcfsuU4F+8kfIvR76LSRGagBC/KHCCtSQvrv6tVAHvlDhJlLcz79pdCCN/lD
hDHWkcG2Mh0Y0+eVIjSeq2Zk53SQTP4Q4fvTFp21grddyB8i3PNg6RIT4frn
I/lDhF1zvTbJCrQQR/4QoWz53hSTpxpYSP4Q4aCyEb3/KtTQRv4QoedfL+vS
NqsgjPwhwu73H1ZlVjaDNflDON+aLRdW/y1c/5M/RLjj5eQ39ofqIIj8IcJ+
QU5wZHM1mOp7/CPCVZfdjUcFKCGb/CHM5xyjQzvWl4In+UOEBXWBiYd8C8BQ
3+OT0HNi3c6T5rmQSP4Q4dvz/6bGH38IPPlDjAdS8+v3n82ETvKHGMclxy9a
9k8qRJM/xDjp6NqNCZwcHMgfYixzGFJQ1yKHZvKHGN/MeHKlrDUdQsgfYrxm
Pady5boHYEn+EOOipReCjp/PgULyhxj7h132/+5QAfiSP8Qocsg7GTm1DEz0
PSzF6FP7+doHi0pIIX+I8YvKZOQVrgbcyB9ivD31U2j4znroIX+IcdUk15ap
oY0QT/4Q49r8F2M+ewv7P/lDjKbtXsmrw1TQQf4Q45MpJ4supqkhnPwhxnu2
iugdWRqwIX+IMW/OjpfvhfeDGvKHGEc/+9PYb7oOgskfYuysLR43LUwH5voe
zmIsGet3ZLKwPynIH2KcAKvzGnfrwIv8IUbFsFn753VrwUjf4ycx7jrqfylh
phaSyB9ilLPHZYXjNbCU/CHGzdMXuU+vUEEX+UOMQ4qMG9rutUAs+UOMVaeG
f9gU2wiO5A8xbnO61/F5Wz2oyR9ivD8reo29tAZCyR9ifOyzYeQ4cSVYkT/E
uGY79GS+KINS8ocYSx3bzDuKCyGA/CHGmIm2ITlsHozS9wgV42sv00/N+xWQ
Tv4Q+ht0H2nozQIP8ocYQ+33mbgXpYHBAr0/xFh7MedL5Ek5JJA/xOib6zAq
dpccWPKHGPfcmjC174M0eEX+EOOW/327SXc0GyLJH8LrWXfb7XN/BHbkDzG2
2efajjHIhwbyhxizKjrT1EElsJ/8IUaTQJsLME8JFuQPMbZUee4bta4a8sgf
YjQ70rWh4UQdeJM/xLh9t3ns9YQnYKzvkSHGxGv9LbvONUMy+UOM2S7TrztN
V4EL+UOYD67Wvt0b1fCR/CFG606+7EuQBuLIH8J8Px2xxcNVCwvJH2KcXlX0
ybWfDtrIH8Lrmb+d6bhTB2HkD+HP69L4bwVvW5M/xBj3qK2h+KQOlOQPMXb7
BDEuU3UQRP4Qo3l+yAmjQC2Y6nu0iVFrdVvxW6AGsskfYlxm6xL3yVYNnuQP
MTqk9iu5HdUKhvoeb8R4pHpw6N2QJkgkf4gxY2CMI7g2AE/+EOZL3d2ixTNr
oZP8IcaFd/aX97WogmjyhwQPWTxvuQfC/k/+kGDWy6mD+swthmbyhwRvxLeM
yD38GELIHxIcOe7E/ZaQR2BJ/pAgjr93/NKJ+1BI/pDg5HlHK3LL0sGX/CHB
5uji04O75WCi7zFOggfHJ8UfRzmkkD8kWBf6xL6jKhXcyB/Cz1FHGq9rM6GH
/CHBhYXrfvG0VUA8+UOC6aYPQodF5gFD/pCgfXDl5YsVRdBB/pDga6NdM7pd
KyCc/CHBPWc3PAgNqgIb8ocEpRGXvjK5XAs15A8JTtG5LPUQ9vNg8ocEY3ym
eyfnNIG5vgcjwaGrrkYPjGwFBflDgkHMjsLBQ9TgRf6Q4E3p+W+zv9WAkb7H
jxJMedUYvsdMWP/kDwnefZgXFVSnhaXkDwlujQ262/8nHXSRPyR4K85VsipO
B7HkD+F8euHN4vM6cCR/SNB0jv/TdmE/U5M/JNgbZX5oxy0thJI/JDi+zyjz
wBwNWJE/JLj+h9HxfIwaSskfEtRlXm1xmKOCAPKHBGeHZa5L3tIMo/Q99kpw
Z0TipSOLnkA6+UOCRZ2KPgvG1IEH+UOC206zK32+VIHBZr0/JNhnefOHlUOV
kED+kKBn6hXl079LgCV/SDAjtd+EKMEnr8gfEqz+Uqg6fDYHIskfEgx+un73
pYkPwY78IcF5aYV153oyoIH8IcEWr6sZt86mwn7yhwRXre0wypovBwvyhwTl
vfJ1xRNTIY/8IcHiG9tHynZlgDf5Q4Ltj8sNLC0fgrG+x20JLjZ48527XS4k
kz8k2D14rfeYHwrBhfwhwc7l5yN2vy2Dj+QPCb4oVXRrT1ZCHPlDgv38x5X1
SauBheQPCR6JfrbpXUs9tJE/JPhU2l2c97wRwsgfEnybHJ/2c0ELWJM/hPON
GLvV+J4KlOQPCaYG5wWqm9UQRP6Q4I68jf/sadSAqb7HEwl6OHtd+++aFrLJ
HxL8sYGZ9/cPOvAkfwjrc3tBWnOEDgz1PdoleHLsqqv67zNKJH9I0EY55KB2
qw548ofQ+4C66bROC53kDwnChIIHL4ZoIZr8IczfY62aA+8E/5M/JLiuY8AN
n0sqaCZ/SPDiqfiRI/gWCCF/sLh7f8q7P6wbwZL8waJlSFugiUE9FJI/WDS7
u8FrpboafMkfLK65Vr1RrVWCib7HMBYPxo4y6mtXBinkDxYLqjVxt6cVghv5
g8Uffx423z87F3rIHyxuEOW7x/xPWP/kDxb337qwMWhFFjDkDxZlLReO2a9L
gw7yB4vOk7b/3N9bDuHkDxY/dqSfP3xJDjbkDxYTnVev7bMgHWrIHyx+H2he
Yul+H4LJHyzOGSrq9Hj1CMz1PX5g8dpXQVYXkvNBQf5gUTTu+fgJjqXgRf4Q
jnfaMJ+LCUow0vcQsWi84XXS55JqSCJ/sHhsckjsrX/rYCn5g8UJmRjqr79/
BvmDxcxD64/bf2qGWPIHi6b5m89cWakCR/IHi3kFj9+NO6kGNfmDxaWOPSZj
zmoglPzBouK0/ZOEAC1YkT9YTIq5GjZ0tA5KyR8srpryoe3iLzoIIH+waNL6
55dNwvXMKH0Pf2H8ZltA9yEdpJM/WDR4HTG4coQOPMgfLJbI71lOXaEFgwi9
P1i0tnPDaE4DCeQPFndliJNVX6mBJX+weOnndxVlM1rhFfmDRb8t9sviRzdB
JPmDxVP1bFv383qwI3+wKI3d7TQjrwYayB8s7umQVDZnVsJ+8geLMbOHzb+S
Uw4W5A/hcfnOulvhRZBH/mBxtHR1vFdnHniTP1h8HhY84/qAR2Cs73GNRW6+
H3e5PBuSyR8sylt+dmWWpoML+YPF6U5hifr/3/+R/CH0Ojyn4vvlcogjf7D4
vyGLpMcc0mAh+YPF3Gllvz+8mAVt5A8WjYyD/3qTroAw8odwPNkHPdfbPwZr
8geLdX9lT5odWQxK8ofQXzbEkXtYAUHkDxb3nh/56ZC6Ckz1PSqE+X6GbfrX
uA6yyR8sKqvqHg2c8QQ8yR8sPuvvrgib0gyG+h5NLDYc+7BS/aIVEskfwvy7
skN9bI4aePIHi6cVAU4BThroJH+weGcflp2fK6x/8geLpfY9V5mXWnAgf7BY
PGhUzP1NOmgmf7AYuqJ5yyzB2yHkDxYfV1csdI/WgSX5g0V3xyGGbvN1UEj+
YHH+0qsDpKe14Ev+kGJYUYTbvYsaMNH3+EqKkqHHOku81ZBC/pDixMyjK2z7
q8CN/CHFep+pZbN7m6CH/CHFz/Lj3YqaBognf0gxOKw8SXGjFhjyhxQHu6qt
p56rgg7yhxSXL4uYmXVL2P/JH1IMjNh2x6JPCdiQP4THL65zq7XNhxryhxRr
n/20eNyoHAgmf0jxx1/6yR0DHoC5vscsKQ4fttRp97YMUJA/pLjm9vKUWDYV
vMgfUuQWOLbOF7xtpO8xX4q/G/w3ZNK2VEgif0ixJXBf+8yxmbCU/CHFzQlz
j3B/PIQu8ocU27P2jNlQlQux5A8pfrrRcuLzu0JwJH9IcXJWecHIB+WgJn9I
8e7wKZox/1VCKPlDijcH3ZRMmVwLVuQPKTq07HqRJmmAUvKHcDx7axdvd26C
APKHFK0SDw98YNkKo/Q9Nknxl9Cow31bVJBO/pCiX/YslPXVgAf5Q4qx3QXm
4R81YKC/wUWAFA8M9cl+m62FBPKHFEf0HLUuZXXAkj+kWNZ9cLnrWR28In9I
0ef+Xd89l3QQSf6Qoq1i27jANTqwI39IkXXzUO4o0UID+UOK39t9f7TppQb2
kz+k+HekzasJhWqwIH9IUfl1R59WPxXkkT+k+DQjs3mhrhm8yR/C41sau7wU
wvW/vscFKfb9+emM6dF1kEz+kOLJh3WTm/ZUgwv5Q4o/P1pmtDFECR/JH1LU
zf/mutPBUogjf0jxfXhDQe/RAlhI/hCOb/HZSlPbXGgjf0hxr3Le6awLDyGM
/CHFCxHarSXJmWBN/hB+X354VkpvKijJH0K/qduN/+cshyDyhzAfVDf/GFEj
B1N9j8dSdJpyoqcuPx2yyR9STJX//HzrDw/Ak/whxaHTh61f+2sOGOp7KKW4
+nnQ7WFeBZBI/pBiwSu41verMuDJH8J4DzunnjusEjrJH1IsGT2v9XeHGogm
f0jxxo47/crX14MD+UOKQybbRc/Y2QjN5A+h/0K+ddpPwv5P/pDi15t+/Tjr
VxVYkj+E1zd8mLTqjhoKyR9SHKNeedI2VQO+5A8pGsrMbzUf14KJvsdnKT44
7F/9h+CfFPIHh0WbbrYqjurAjfzB4ZuaiED9/TN6yB8cftujmJQSrIN48geH
9/oZxjb2aoEhf3C4lb99s8tWCx3kDw5X3HoSf2KSBsLJHxz2ugWYDKhXgQ35
g8PqvcOuDnvcAjXkDw6/dtt6X3yjEYLJHxyuXVUX9M8v9WCu7zGFQ/cf073u
rq4BBfmDw0ttbtxN10rwIn9w2BT+aevSQeVgpO9hw6Hvh86/ZE8LIYn8weGA
9HWaDZ55sJT8waHTyKjfbCMV0EX+4FD8n9/Xb8yyIZb8weHcwFGxDU1p4Ej+
4HDx0Qo7n9NyUNPlGofPOmB1or8cQskfHO5+WVj05a80sCJ/cHjb9l7GTa9s
KCV/cPjg+iKDliWPIID8waHUSrtvvO4xjNL3cOfw5LRK974uJZBO/uCQy3zf
G2+lBA/yh3B8Ez7M/MJXg4H+C/k3C+P37c6ituA6SCB/cDjvpmHgqjNPgCV/
cChyza26c6wZXpE/ODxUMNxR/Y0KIskfHGbs25WzZY0a7MgfHP6WON5qq78G
GsgfHEZ9dVf7dJkW9pM/hJ6Tfn1i0UcHFuQPDhtcYsdtDtRBHvmDw1eLXv1Z
J1z/epM/OHSuvHn861M6MNb3iORwULDZc//pOkgmf3DYv+JDuHqXFlzIHxya
ZZ8Kf7NHAx/JHxx+XN3nbeR8NcSRPzi8c7Tu3fErrbCQ/CGMX1dV6Z7TTdBG
/uBw+u/d+xZ7N0AY+YPDJWt/uNeFtWBN/uBQM9LN97lNFSjJHxy++7302HZn
Yf8nf3A4NumHJN/lxWCq75HF4eGp9RgT9xiyyR8cskFH7U/GPAJP8geHt775
9fXNG/fBUN8jn8Me1/ycg7p0SCR/cHh/xOHf/AxTgSd/COP55cWD4AVy6CR/
cBjE5Umm5qZCNPmDQ79dFnOT8zLBgfzBofZy/vrkCQpoJn9weMTZquhGUB6E
kD84fD2i4WHH7SKwJH8I8+voWucsUQUUkj+E9TbwXvKFDVXgS/4Q+nXGM19H
1IKJvkcnh8VXK/1fJjdACvlDeHxdhNOsu03gRv4Q1kvPnWfVIa3QQ/7gMDTJ
dOCiAWqIJ3/I8Gz3gXNtlhpgyB8ynPFBlJwyWlj/5A8ZJkrbFE+rtBBO/pCh
p3wiW+KqAxvyhwznVS76J+aCDmrIHzJMndu0YILwczD5Q4Y+8vqOUGcdmOt7
jJfhUBfuZv0dLSjIH8Lzj/c7tbNQA17kDxl2r9I0xcepwUjfY6oMRTu29QtZ
oIIk8ocMv7o4eYHn3mZYSv6QoXu4duLVFU+gi/whww+M2GemVR3Ekj9k+Fs7
t+P2sGpwJH/I8IJ977ljE5WgJn/I8LFX/wj/0hIIJX/IcNiW7G0JHflgRf6Q
4fNFig0xSTlQSv6QYUauymSG/v4Z5A8ZOjdbjL08OhNG0Q2rZNgevXHy1YRU
SCd/yLC8ZvT7Y8J88SB/yFDFh7U7jkwFA/0XjnnIsPfa9oOH3DMggfwhQ3P3
oUWrTB4CS/4QjnfKOMODZrnwivwhwyhGYrrXrBAiyR8yHJzx+nxcRRnYkT9k
+F3s4BFjf66EBvKHMF5ZG9f1uVYD+8kfwvlk7XjBl9aDBflDhp80FTc6Gxoh
j/whwxOzzwU0prWAN/lDGJ+dTgsMklRgrO9xVIYFgT/43K9TQzL5Q4a+FT6z
PWs14EL+kKGLUlUw+IoWPpI/ZGjf5L1vqL0O4sgfMvysrF904zcdLCR/yHCA
R51Rg/B+00b+kOGXP6PyPvnqIIz8IcNYmxm1Ac+0YE3+kGGI99+vd4zUgpL8
IcOpG50n+n8S/E/+EM6vPD1xy3UVmOp7JMtwpfLf5E1rWiCb/CHDiPpN46Og
ETzJHzK8prF0NxhRD4b6HtkyNPEePen+22pIJH/I8OTLnT7L3iuBJ3/IcOtG
pZPj8jLoJH/IMMhA1XN1cSFEkz9kGJn/dvqp6lxwIH/IkG1+ar1Kv/7JHzJ8
9ubp2gX+WRBC/hDmw1XRhcUBaWBJ/pDhT+z7SYu3y6GQ/CHDnLqrb8rPycGX
/CHDww7S/G+mpYOJvsdTGT7am3jbyv4+pJA/hPVVUDeyt/oRuJE/ZOigutw2
5Ew+9JA/ZDjFcIlaZVYK8eQPGW7mz1i9OK0EhvwhzMdppS3tGdXQQf6QoeTg
kvbStjoIJ3/waOk9033R5ydgQ/7gsbSqK3Py82aoIX/w+GbtpUfLnFUQTP7g
0XEf/JEYqgZzfQ8THr9YnJ1wPVIDCvKH8PuLttn+5KsFL/IHj2MXTfQfIHjZ
SN/DnEfPp+zk7n06SCJ/8Hjyxf3l+uuZpeQPHhcNv2NzMlQHXeQPHuXXh4yb
PkYHseQPHo36vR89x00LjuQPXri+TMj9ZpkG1OQPHtv/rSg8O0QNoeQPHs9n
zj9R6tgKVuQPHqsHmmwNnNYEpeQPHmWlB1o/fK6HAPIHjzckty7n1NbAKLrB
Do/eq8X3LpRUQjr5g8c5Lz4cS9KUgwf5g0ddEjf7j8QiMNDfkHk5j8/PSH2v
Gz2GBPIHjxOXBOxIMXsELPmDxzt9FuTzr7PhFfmDxycLXVIPeKVDJPmDx5bv
P9QMKJaDHfmDx5ktMcfchOvhBvIHj3NrTQOUU9NgP/mDx3FRxZ+qf8kCC/IH
j/4r8ls8riggj/zB47+HBw9bMv4xeJM/eDzYbt/d5V8Mxvoe+4U+Fz9wGsGD
yeQPHodX+A0/Vl4FLuQPHisGfB478HMtfCR/8AiHSv0Sxz2BOPIHjxtaw8ZN
G90MC8kfPK6chCYNTa3QRv7gcdnZ2kkNM9UQRv7gMchTdTVdogFr8ocwfnD9
WM9sYf2TP3icdKhxkFp4fwgif/CYbJE/4d5GHZjqe/zJ429l04wvC17KJn/w
GP1isJVfjA48yR88GuSMP2gDOjDU97jL4x+GZoa6s1pIJH/wGHXKoq/mqgZ4
8gePl4tPnIUANXSSP3i8FOE37eRgFUSTP4T5Uzth7fOhzeBA/uBxlU+hnfJp
AzSTP3gccKxCG5VdCyHkD2E8qjclLkisAkvyh9D3taH/3fvC/k/+EI53c9cH
C/MS8CV/8DhZ/Pqzs1M+mOh7NPPoMHLq7l+n50AK+UM4/qj6C7qoB+BG/uDx
weyTjW8PZUAP+YNHl8lhvRqXVIgnf/DoapoYo/c2Q/4Q5ktF2LbLa1Khg/zB
47Mi2zF7PmdAOPlDWC8++VaXjj8EG/IHj7/vjMmqTMuFGvKHE0pmtYCquhD+
D7HIjnw=
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.684004522835308*^9, 3.6840049519479437`*^9, 3.684054454467626*^9, 
   3.684069582419244*^9, 3.684070241903454*^9, 3.684070422219385*^9, 
   3.6840709013168974`*^9, {3.6840715986391683`*^9, 3.68407160413778*^9}, 
   3.6840724077383366`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Sim5.csv\>\"", ",", "modeldata"}], "]"}]], "Input",
 CellChangeTimes->{{3.684004253455697*^9, 3.684004255368626*^9}, {
   3.684004339399042*^9, 3.684004357797412*^9}, 3.684054177653225*^9}],

Cell[BoxData["\<\"Sim5.csv\"\>"], "Output",
 CellChangeTimes->{
  3.684004128972995*^9, {3.6840041651830273`*^9, 3.6840042557202888`*^9}, 
   3.6840043586108446`*^9, 3.684054454576827*^9, 3.6840702471857643`*^9, 
   3.6840709046132607`*^9, 3.6840716062027173`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{"AbsoluteFileName", "[", "\"\<Sim5.csv\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.6840541796374235`*^9},
 NumberMarks->False],

Cell["\<\
After importing the data into LoggerPro, we fit the data to a Sine curve to \
get the response values of A, \[Phi], and \[Omega]r\
\>", "Text",
 CellChangeTimes->{{3.6840046323027353`*^9, 3.684004701320562*^9}, {
  3.6840544417515445`*^9, 3.684054451517207*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ar5", " ", "=", " ", "0.2787"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]r5", " ", "=", " ", "1.415"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]r5", " ", "=", " ", "5.935"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6840047037259483`*^9, 3.684004798515588*^9}, {
  3.684005093816382*^9, 3.6840051028571663`*^9}, {3.6840544450119653`*^9, 
  3.684054448568788*^9}, {3.6840702884335537`*^9, 3.684070305817417*^9}, {
  3.684070950328003*^9, 3.684070972269888*^9}, {3.684071897518059*^9, 
  3.6840718996105075`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation VI", "Section",
 CellChangeTimes->{{3.6840027726490984`*^9, 3.6840028008734694`*^9}, {
  3.684002992227764*^9, 3.6840029923680263`*^9}, {3.6840529210319653`*^9, 
  3.684052922248087*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "define", " ", "constants", " ", "and", " ", "initial", " ", 
    "conditions"}], " ", "*)"}], "\[IndentingNewLine]", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"g", " ", "=", " ", "9.8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"m", " ", "=", " ", "0.429"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", " ", "0.38"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xeq", "=", "0.366"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ti", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", " ", "=", " ", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dt", " ", "=", " ", ".03"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"keff", " ", "=", " ", "11.58"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c2", " ", "=", "1.227"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", " ", "=", " ", "0.12"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]06", " ", "=", " ", "7.765"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", "4.388"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "0.2613"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{"b", "*", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "define", " ", "an", " ", "array", " ", "where", " ", "we", " ", "store", 
     " ", "the", " ", "results", " ", "of", " ", "the", " ", "simulation"}], 
    " ", "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modeldata", " ", "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"ti", ",", "x"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "set", " ", "up", " ", "the", " ", "procedure", " ", "for", " ", 
      "step"}], "-", "by", "-", 
     RowBox[{
     "step", " ", "solution", " ", "of", " ", "the", " ", "equation", " ", 
      "of", " ", "motion"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"t", "=", "ti"}], ",", 
      RowBox[{"t", "<", "tf"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"calculate", " ", "the", " ", "acceleration"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fs", " ", "=", " ", 
        RowBox[{
         RowBox[{"-", "keff"}], 
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"(", 
            RowBox[{"xeq", "+", 
             RowBox[{"b", "*", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Omega]06", "*", "t"}], "+", "\[Phi]"}], "]"}]}]}], 
            ")"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Ff2", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sign", "[", "vx", " ", "]"}]}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"Abs", "[", "vx", "]"}], ")"}], "2"], "*", "c2"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ax", "=", 
        FractionBox[
         RowBox[{"Fs", "+", "Ff2"}], "m"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"redefine", " ", "y"}], ",", " ", "vy", ",", " ", 
         RowBox[{
         "in", " ", "terms", " ", "of", " ", "the", " ", "values", " ", 
          "from", " ", "the", " ", "previous", " ", "step"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"vx", " ", "=", " ", 
        RowBox[{"vx", "+", " ", 
         RowBox[{"ax", " ", "dt"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", " ", 
        RowBox[{"x", " ", "+", " ", 
         RowBox[{"vx", " ", "dt"}]}]}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"t", "=", " ", 
        RowBox[{"t", " ", "+", " ", "dt"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "add", " ", "the", " ", "results", " ", "of", " ", "the", " ", 
         "calculation", " ", "step", " ", "to", " ", "the", " ", "array"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"modeldata", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"modeldata", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "x"}], "}"}]}], "]"}]}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataplot", " ", "=", " ", 
     RowBox[{"ListPlot", "[", "modeldata", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", "dataplot", "}"}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6840028717566423`*^9, 3.6840028804197216`*^9}, 
   3.684002946328555*^9, {3.684003032789824*^9, 3.684003035819249*^9}, {
   3.684003194019925*^9, 3.6840032327586594`*^9}, {3.684003567618879*^9, 
   3.6840035963091984`*^9}, {3.684003725187519*^9, 3.6840037444523983`*^9}, {
   3.6840037823354673`*^9, 3.6840038328405333`*^9}, {3.6840039558540306`*^9, 
   3.684004038586559*^9}, {3.6840041173601494`*^9, 3.6840042275613728`*^9}, {
   3.684004514844581*^9, 3.6840045162314205`*^9}, {3.684004949848997*^9, 
   3.684004950995141*^9}, {3.684053830062647*^9, 3.6840538370216475`*^9}, {
   3.6840538765076475`*^9, 3.684053877515647*^9}, {3.68407100696425*^9, 
   3.6840710674538703`*^9}, {3.6840715711974936`*^9, 
   3.6840715764209676`*^9}, {3.684072417508996*^9, 3.6840724190260525`*^9}}],

Cell[BoxData["0.429`"], "Output",
 CellChangeTimes->{3.684004522835308*^9, 3.6840049519479437`*^9, 
  3.6840545698504844`*^9, 3.684071068422944*^9, 3.684071586368375*^9, 
  3.684072419713524*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1m3k8VN//x4U2ImvIvu/r2Ife7ywVKkX7qrQo7dp9tUkLlYq2D5XyqZR2
lT4pFS0zYxtmrGO5kzZplxZKvztvfvOPhwfuPec8z+s83+eey3T+yoiF8nJy
cm0KcnKyr///ibhrlNQ+sQ7oy91TMCVLb+GTttq+76/CAxWPkFe6taBUm73K
Xykfwg4sHHD7XXXfzwvhQsoj/cHrxMChTzFcG/B3sEBc1ff7z2HSqGL577aV
IN2sdXW0VAC8yvyqjTYVfX9fDieVDpdfm1cKY+gXKsEt0+fWKI4A3Ol6Iig4
GGOsJ+CBiezXjarhwqg/Yf3H8WAIXb8WTrzw1A1o5sFPm1mpRZ11kHchYsPE
EwJ4SfdrgP9KgyYfSSgDYans0wj7Hsw3qbwlhPt0/2aYPSBr5lE1EUyiBjGw
86hRyfjL1RDa22AoRZWac1F1gNShFzCxS/BFa7AEPKl9rWB8Nk7aktQEDrLb
27yEynOZR8Pvt4AZtfcVFEeNNxxYwoAue7HNWq9hsuCxr9k2KahS+99AvbrJ
3qhOKSgSjbdgd7nC4aT5C+ii/ryFAbPelI1TfAGfJ8oa2Aauu6bWCw9J4TU1
7x24lnQO0CpnoJGGox0cikX1a/e0QBX19z1gwI635UOagNcpu+AHeG538bH1
pAYopP5/BMM//Tot9tbCLVnzrn6Ci1dVWkoqxTCZxuMz9I/O5cuPr+obv88Q
pnZUrUVHCGE0Pl9g0JJv/pF7S+EZXf8LLD6kPOh9CR9G0nh9hbcGi3+ZaPP6
xvsruG2pPbBty3PwovHrgFRjXv4rIx7cpPt3wHXDBxGzBwrAkcbzG+QXrS2M
tSmDHFn3sr/B0b8R4dcuCMGcxrcTooZ0rAZdEZw6Ift0wrWy/YnSe9WgR+P9
HQb9O+l6/cI6SC+SNfA7lM74HLz8WwMMpfH/AfB5YVv36CZIll0u6QcEXPyR
kjy6BfoTj5/Q5XZ6zZyVDGyTDffmn5B+a7T3gh4GuonPTxi7TOH88xAprJc1
b9UvmJgVOnNVmBS+EK9fkN56KvHlHwaWLZJ9usBszhA1gygG3hC/LtA9vuvN
tG/NMF/W3Vnd8OiQk0ZJfiM0Ec9uqErsTB7BaYBpxOM35Oy8fC7yUC2IiMdv
cA8axFn6SwzjiccfSM1OEvntrwI+8fgDN0K9T2fGCCGIePTAomV5AauCyuAh
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
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.684004522835308*^9, 3.6840049519479437`*^9, 
  3.6840545698504844`*^9, 3.684071068422944*^9, 3.684071586368375*^9, 
  3.684072419777396*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Sim6.csv\>\"", ",", "modeldata"}], "]"}]], "Input",
 CellChangeTimes->{{3.684004253455697*^9, 3.684004255368626*^9}, {
   3.684004339399042*^9, 3.684004357797412*^9}, 3.6840541888933487`*^9}],

Cell[BoxData["\<\"Sim6.csv\"\>"], "Output",
 CellChangeTimes->{
  3.684004128972995*^9, {3.6840041651830273`*^9, 3.6840042557202888`*^9}, 
   3.6840043586108446`*^9, 3.684054569989498*^9, 3.68407107215924*^9, 
   3.684071588767866*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{"AbsoluteFileName", "[", "\"\<Sim6.csv\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.6840541903894987`*^9},
 NumberMarks->False],

Cell["\<\
After importing the data into LoggerPro, we fit the data to a Sine curve to \
get the response values of A, \[Phi], and \[Omega]r\
\>", "Text",
 CellChangeTimes->{{3.6840046323027353`*^9, 3.684004701320562*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ar6", " ", "=", " ", "0.1767"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]r6", " ", "=", " ", "1.947"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]r6", " ", "=", " ", "7.765"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6840047037259483`*^9, 3.684004798515588*^9}, {
  3.684005093816382*^9, 3.6840051028571663`*^9}, {3.684054193445804*^9, 
  3.6840541948299427`*^9}, {3.6840719280812345`*^9, 3.6840719444663076`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation VII", "Section",
 CellChangeTimes->{{3.6840027726490984`*^9, 3.6840028008734694`*^9}, {
  3.684002992227764*^9, 3.6840029923680263`*^9}, {3.684052926040466*^9, 
  3.6840529266805296`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "define", " ", "constants", " ", "and", " ", "initial", " ", 
    "conditions"}], " ", "*)"}], "\[IndentingNewLine]", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"g", " ", "=", " ", "9.8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"m", " ", "=", " ", "0.429"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", " ", "0.38"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xeq", "=", "0.366"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ti", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", " ", "=", " ", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dt", " ", "=", " ", ".03"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"keff", " ", "=", " ", "11.58"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c2", " ", "=", "1.227"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", " ", "=", " ", "0.12"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]07", " ", "=", " ", "9.686"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", "0.724"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "0.2572"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{"b", "*", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "define", " ", "an", " ", "array", " ", "where", " ", "we", " ", "store", 
     " ", "the", " ", "results", " ", "of", " ", "the", " ", "simulation"}], 
    " ", "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modeldata", " ", "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"ti", ",", "x"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "set", " ", "up", " ", "the", " ", "procedure", " ", "for", " ", 
      "step"}], "-", "by", "-", 
     RowBox[{
     "step", " ", "solution", " ", "of", " ", "the", " ", "equation", " ", 
      "of", " ", "motion"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"t", "=", "ti"}], ",", 
      RowBox[{"t", "<", "tf"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"calculate", " ", "the", " ", "acceleration"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fs", " ", "=", " ", 
        RowBox[{
         RowBox[{"-", "keff"}], 
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"(", 
            RowBox[{"xeq", "+", 
             RowBox[{"b", "*", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Omega]07", "*", "t"}], "+", "\[Phi]"}], "]"}]}]}], 
            ")"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Ff2", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sign", "[", "vx", " ", "]"}]}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"Abs", "[", "vx", "]"}], ")"}], "2"], "*", "c2"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ax", "=", 
        FractionBox[
         RowBox[{"Fs", "+", "Ff2"}], "m"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"redefine", " ", "y"}], ",", " ", "vy", ",", " ", 
         RowBox[{
         "in", " ", "terms", " ", "of", " ", "the", " ", "values", " ", 
          "from", " ", "the", " ", "previous", " ", "step"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"vx", " ", "=", " ", 
        RowBox[{"vx", "+", " ", 
         RowBox[{"ax", " ", "dt"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", " ", 
        RowBox[{"x", " ", "+", " ", 
         RowBox[{"vx", " ", "dt"}]}]}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"t", "=", " ", 
        RowBox[{"t", " ", "+", " ", "dt"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "add", " ", "the", " ", "results", " ", "of", " ", "the", " ", 
         "calculation", " ", "step", " ", "to", " ", "the", " ", "array"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"modeldata", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"modeldata", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "x"}], "}"}]}], "]"}]}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataplot", " ", "=", " ", 
     RowBox[{"ListPlot", "[", "modeldata", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", "dataplot", "}"}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6840028717566423`*^9, 3.6840028804197216`*^9}, 
   3.684002946328555*^9, {3.684003032789824*^9, 3.684003035819249*^9}, {
   3.684003194019925*^9, 3.6840032327586594`*^9}, {3.684003567618879*^9, 
   3.6840035963091984`*^9}, {3.684003725187519*^9, 3.6840037444523983`*^9}, {
   3.6840037823354673`*^9, 3.6840038328405333`*^9}, {3.6840039558540306`*^9, 
   3.684004038586559*^9}, {3.6840041173601494`*^9, 3.6840042275613728`*^9}, {
   3.684004514844581*^9, 3.6840045162314205`*^9}, {3.684004949848997*^9, 
   3.684004950995141*^9}, {3.684053947327647*^9, 3.684053963126647*^9}, {
   3.6840711084968534`*^9, 3.684071112560089*^9}, {3.684071153074443*^9, 
   3.684071170672945*^9}, {3.6840715554758987`*^9, 3.68407155795816*^9}, {
   3.684072425513667*^9, 3.6840724390572214`*^9}}],

Cell[BoxData["0.429`"], "Output",
 CellChangeTimes->{
  3.684004522835308*^9, 3.6840049519479437`*^9, 3.684071172016515*^9, 
   3.684071558146081*^9, {3.6840724357936106`*^9, 3.6840724394322414`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw9m3k8lN37x2WJQiUKUbbs2zBmhhm6riIl2tCqfS9KpV077XlKtGohbU/a
tSht0tOO2cw+WqSSdimS+t1z8f35p1cvnDnnfM77vK9zn5vTlOTY6fp6enq1
Bnp6un//9xVb1GtD3XAF0D9Fh2HNjWELPXb+7//nYGjm3Z1ZPZXQUZ4/P6zj
NYgqbjG7/1fZ9v3bcMlp/YEx/mpg01cpvP3WyHuwT9P28w/BoebY5XEOVfBy
hdW5AS+fQOzMPzN35D1v+/1yODHu9rzVq1/AQPoBEeR/Vh88Z/ISgqg9CbhV
TLDuNPklOOp+vFclaHZ9yV2Y+hLMqH05XC10eFYy+CU0eozbca9BAeqI0Ehn
0Qt4TZ+ngnsPOpQ4mbwA4TPdlwbi4qclXPyjhZv0+VWgqvx64uFuNcRTh17A
sEL/0hxDJQxq7TCUXds2fNVyGSAN6BWcuLbnsqCnFLjUv2pQbDjbabqFGHx0
H+/xGs7psXuNnC8EZ+pvDfSUpXX/kVMONkxjK6zegKv57699F5RBJ+r/W1Da
xQ/AlDIwpDTeAZulOl1YUA6/aDzvoN2p8M2ZG4TwZbiug7UwrYvvtwm+YnhD
3XsPo8P77LzsIgUNTUcdPBzVzpcVIgMxjfcDyL/cveiGCnjUoGvwIyz8Z/vx
vhYquE3j/wQLTow9wc5Qw2Vd9859huVbnnw5dVADI2g+vkDz6XWwzV/bNn9f
IKP0jDUvVAvRND9fgXV07uqq2xp4QO1/hRdW20Nzb6uhL83XN3jUboCrV7yq
bb6/gUZVmGp/XAE8mr96WDW7bOo3jQwu0efXgyK+e+5It0rwpfn8DvWBDep7
JyRwSje8/O+w2f900e6VYnCh+W2AK3fnHH92WwSH9+u+GkDsNvjbilUisKX5
/gGvJpo3J94TQfY9XQd/AOf4yNj2O8XQmeb/J7j+jGgRySWwVdfchp/waVeZ
jJtaCUaURyPcGrN8w7zhclirm+4VjTDk6QCzS35KaKZ8GuFvqWGYwXsVLNF1
b34T9B4zZeq8SRr4Snk1QdaidAfnJVpImqH7+gXXY/soYrpXwVvK7xeM4xV6
bgisgim64Y5rhi7Ge26639OClvJshn9PetbyH2hgNOXxG4aucF4UGasGCeXx
G7YdPdvZZYsShlAeLWCDmZMc9sjhMeXRAmOmGhw5f7wSIiiPP6DvGdjo8EIC
dyiPP2D2+vD5xhli4FMef2G5W0fDqfEiuEJ5/IWl9WP6ZxQL29avHt79rscb
86+wbX3oYcG85+V/eotgF82vHt5YWtwz0FsMFdQ/PawKKlzUk8mvldd2eMLq
fFXMgkqIov62w3DjW+7lk+Swkea/HZ5L26SaNlAJpdT/dvjbYq/vJj01tO5W
+ripc/mds7M0QNMdpo/SaLFhyUwt0HSu0MdDZXcE+XVauEbj08fYj0fc177T
wnfKSx/v2NmMZ43WQgCN1wD1rR7lGPfVwDxq0AD9jSwsVxaroIDGb4CfOm2s
WvVRAe8oTwO0/dSsZRvIwZXWpyHOU6et7OFRCVMoX0N8s7jjrXXrJXCE1qsh
/nz/I+JggBg01EFDfHLafErfwcz6pPVrhCdWlPWf/0YIIyl/I1RZ14xpMRZB
Fq1nI8xKrDhUelUEQloPRpgYMzkv850YzCmP9mgS0d302jopDKI82uP5sKTh
iWNlsInyaI/vnNJPcSIVcJ/yaI8PxptemdVDBe0oD2N05GzgWl5SQx/Kwxgz
+mT8XvdZA6mUhzHem3Mlsf9NLRRRHsbY47aP+SGTKmj4q/syRruTRi+fPtFC
IOVhguO/yKY//6uBZMrDBJu2R2ivX1HDGcrDBDst/K7QN1VBLeVhggPaj+pk
56kAN8qjAybuXrHkRKgMplIeHXDXNG7/1GQp5FIeHdDzh7aRVyMGLeXRAYtf
bIlzviGCHpRHRzS9PuDZMAMRjKI8OuK5PidtYyqEkE15dMTG5f5BRW4iEFEe
HfHbpD48VkcxdKI8TPHag+Xn582SQDTlYYqOG3oG9neshM2UhymO+r6t2t1Y
Dv9RHqao959vTOYXBehTHmb4o6zhdW6hCloFZ4Z2yVutO/ppYCXlYYZXV/0o
ex2hheuUhxm+3KwUT3qthR8yXYPmCIdaGuz/aoFNeZgj61Lz0fUZWphPeZjj
3Z0Ofo8yNXCW8jDH0u6LR691VMN7ysMcp5jvaXIarwR3yqMTugRyAmxT5DCN
8uiEk1xn9sr8pxLyKI9OyE1z3RzL7H9VlEcn/HG6ZnX0PDHYUR6dcYFldkj7
uSIYTXl0xou3P9ZYMOt1N+XRGa/IvwSfrxGCmPLojB/L7X7PWygCE5qPLrj/
1bU7tzeKwZ3a64Jfx1bsKOsohUiany74M+zEJnNlJUyn9rtgXlH8zqT/5JBO
89UFfW7cuB15TAn59HnM7wccTjUYqoZ7NH9dMHLXOBP7Exp4SZ/fBfWM1v07
LVMLerS+LTC4R7p4OzOfDrQ+LDBwzJmoBTXatvVugbY3ZfYlYVoYT+vFAs9N
jH502oLJi+bbAr3OLE22WqmCHFo/Frg198/KyccUcIPm3wJZeVtCzK7JQEnr
yQJviRN+d3guhUbKwwI3zFdPK+wrAWtaX13x1W69ju4tIuBSPl2xOcx4Gs9D
BCNovXXFdNbwkb/FQlhEeXVFccInr7X/vx90RZMB4z6NeSyCS5RfV1z7sKpH
hakERLQeu+I3gfeQnhel8IXy7IoC115TR+6UQWfKwxKjR1gHyFcqwI/ysMTb
nU5MXhWjgsGUhyUWCTb6harVkER5WGL53FPPxpppYRvlwXz/Wm7aaIb305SH
JS65fnTxkPZV8JjysMTBBzPm97+mbdsvLdFDVFajUmvAmPKwwqEiyw390tXg
RnlY4YHqyIIXQiX0pzyscMTE/dk1dcx6pTys8IeLBf9VOxmkUR5W+MvlaAej
UCkcpTysMOkqe67hLTGUUB5WKBzTZxonVwQvKA8r3FH177SyJiFQHH+tMPKu
qv0WuRBo+np1wzxu15fD+4rafNINg5de+yzniIG6N64bdmpvtCM9TwKplEc3
XODurLd9ciUcoDy64aqshcfvDpLDdWqwG75UXpUpWEpQUB7dMPP87qCrdSr4
SXl0wxtf2M16YzXQnfLojjz24gf/TdYCh/Lojh0Mbl62+qJtq0e7o4vr7OIR
jVpIoQ52x57Vw/qfStG2+bY7NjusUvwzQwMXKY/umLT05Kmat6q2eq07zjBz
qsmzV8JnyqM7Rn6HigKWvK3+tMYzfpJ1lUP/V29Z47Giaee6MeONoTys8WVD
c9nECDEkUh7WGDx/f8XAWFFbvWSN69xKLq3VCOFfysMaXX0Mh639JGyrN60x
9k2/5Pb/iNrqHWs8VFNq3nJJDO3J5zZ4X6YqmBUuBVfKwwbHu/CvJNnI2uoV
G/RK6x5z0kgBUykPG3T9viip9rkS1lMeNth/T+HgpevUkEd52GCig+DK/aca
uEt52GDDnJGSPSe18JzysMElq0ZuXmpYBX8oDxvc2cX/nbFCCz0pD1u8vDL5
eM9eWgilPGzxQ+ZA90mv1JBAedhi3ecNU4v6qmAF5WGL3xPy9udPU8B+ysMW
7S1uHr69VAZFlIctlsdkbEw+LgU55WGLCWciBnh2lcAPysMWNTvvz7JQi6Ab
5dEDpf2S7nfqLoIgyqMHeq+2HzGN2Q/iKI8eeGGmVeI4WxEspDx64JqCeM+u
H0WQSXn0wImHPK6O7yOBC5RHD/wYNW543kcpVFAePXAjXzDYWCSDT5RHD+wW
NXJFfbECzCkPO/Ss7T/0fboKfCgPO5yoNdz0zEQD0ZSHHRZlnByh9NbCHMrD
DjPfZUctVWphC+VhhwdWcMt2GFTBKcrDDgMUscq3eVp4SHnYodpaMvHLZQ28
oTzs0N1sz30Bs58beeoGbIcuT4dseLlLCb0pD3tmf3u/7/FpOYRTHva4/Nf3
86NLmXqL8rDHGNstS/WNpLCO8rDHN6n/qbZkiiGX8rDHIWZWUYPTRHCH8rDH
a/kPnh/+KIQqysMeNz18/2aeVggtlIc93jCY9PPjGBHYUx49sSl41KMjE8Ug
oDx64sH5tcb5CgmMpTx64nDOOlV+biUspzx64vZKg7N12+Swj/LoieL/Dvis
maeEa5RHT6xdMmajqZMaZJRHT7R6fGYTK00DDZRHT3T4Ptvrc6oWrCiPXnjc
7XgVt4mpByiPXtg0cbRD8GctxFIevXD91SvxolFaWEB59MLTRyao9fga2El5
9MKl4df8pOdUcJ7y6IXTl0OvHI0Cyls3QHQT1g/Z/1kGHymPXrgf/mxiW1aC
GeXRCx1nLa7ZOFcC3pSHA+7v+Fu8vacYBlEeDvjb/PzZd3wRzKY8HLAH90Gf
ZJkQNlMeDjigy6At0l9COEl5OOCrXy15T86I4AHl4YBdraK7334phhrKwwF/
Vi18mr9KCob0YMIBNSNDZy0eLWtd30aOmBxnmJbXXwGO1B9HLHmwts86pp49
r+u+iyOuWTZqdaiunqX+OeLqfJ+vyNSzZbqP7+eIu9L7+fQt1sI46q8jPvPS
zz/E+KtON/+THXFB7LjMoofaNr4dMapbyf7HzRrooItjrSOezU4f+/6CGvbR
eByx/nx55AcjFbjT4xNHDD+5+Ht4bwVcpfE54qT6ruVZwTLor2vuliM6bB/5
Pi9JClIaryNm/g6731Atbt3fNI7obVA/6CZTz36j9eiIXQRO/9QbiWAdHRcd
8ahm/DUzqRC60Pp0wlEzu5zN9hXBEV28tk54u6th/ceuYvCj9eqELodf+2cs
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

      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.684004522835308*^9, 3.6840049519479437`*^9, 3.684071172016515*^9, 
   3.684071558146081*^9, {3.6840724357936106`*^9, 3.6840724395259767`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Sim7.csv\>\"", ",", "modeldata"}], "]"}]], "Input",
 CellChangeTimes->{{3.684004253455697*^9, 3.684004255368626*^9}, {
   3.684004339399042*^9, 3.684004357797412*^9}, 3.6840542022376833`*^9}],

Cell[BoxData["\<\"Sim7.csv\"\>"], "Output",
 CellChangeTimes->{
  3.684004128972995*^9, {3.6840041651830273`*^9, 3.6840042557202888`*^9}, 
   3.6840043586108446`*^9, 3.6840711889623637`*^9, 3.6840715604410458`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{"AbsoluteFileName", "[", "\"\<Sim7.csv\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.6840542008465443`*^9},
 NumberMarks->False],

Cell["\<\
After importing the data into LoggerPro, we fit the data to a Sine curve to \
get the response values of A, \[Phi], and \[Omega]r\
\>", "Text",
 CellChangeTimes->{{3.6840046323027353`*^9, 3.684004701320562*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Ar7", " ", "=", " ", "0.1034"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]r7", " ", "=", " ", "4.129"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]r7", " ", "=", " ", "9.686"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6840047037259483`*^9, 3.684004798515588*^9}, {
  3.684005093816382*^9, 3.6840051028571663`*^9}, {3.6840541977972393`*^9, 
  3.684054199213381*^9}, {3.684071984868949*^9, 3.6840720076507883`*^9}}],

Cell[BoxData["0.1034`"], "Output",
 CellChangeTimes->{3.6840720111235247`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation VIII", "Section",
 CellChangeTimes->{{3.6840027726490984`*^9, 3.6840028008734694`*^9}, {
  3.684002992227764*^9, 3.6840029923680263`*^9}, {3.684052929904852*^9, 
  3.6840529305369153`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "define", " ", "constants", " ", "and", " ", "initial", " ", 
    "conditions"}], " ", "*)"}], "\[IndentingNewLine]", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"g", " ", "=", " ", "9.8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"m", " ", "=", " ", "0.429"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", " ", "0.38"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xeq", "=", "0.366"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ti", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", " ", "=", " ", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dt", " ", "=", " ", ".03"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"keff", " ", "=", " ", "11.58"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c2", " ", "=", "1.227"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", " ", "=", " ", "0.12"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]08", "=", " ", "5.428"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", "4.982"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "0.2545"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{"b", "*", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "define", " ", "an", " ", "array", " ", "where", " ", "we", " ", "store", 
     " ", "the", " ", "results", " ", "of", " ", "the", " ", "simulation"}], 
    " ", "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modeldata", " ", "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"ti", ",", "x"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "set", " ", "up", " ", "the", " ", "procedure", " ", "for", " ", 
      "step"}], "-", "by", "-", 
     RowBox[{
     "step", " ", "solution", " ", "of", " ", "the", " ", "equation", " ", 
      "of", " ", "motion"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"t", "=", "ti"}], ",", 
      RowBox[{"t", "<", "tf"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"calculate", " ", "the", " ", "acceleration"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fs", " ", "=", " ", 
        RowBox[{
         RowBox[{"-", "keff"}], 
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"(", 
            RowBox[{"xeq", "+", 
             RowBox[{"b", "*", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Omega]08", "*", "t"}], "+", "\[Phi]"}], "]"}]}]}], 
            ")"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Ff2", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sign", "[", "vx", " ", "]"}]}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"Abs", "[", "vx", "]"}], ")"}], "2"], "*", "c2"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ax", "=", 
        FractionBox[
         RowBox[{"Fs", "+", "Ff2"}], "m"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"redefine", " ", "y"}], ",", " ", "vy", ",", " ", 
         RowBox[{
         "in", " ", "terms", " ", "of", " ", "the", " ", "values", " ", 
          "from", " ", "the", " ", "previous", " ", "step"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"vx", " ", "=", " ", 
        RowBox[{"vx", "+", " ", 
         RowBox[{"ax", " ", "dt"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", " ", 
        RowBox[{"x", " ", "+", " ", 
         RowBox[{"vx", " ", "dt"}]}]}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"t", "=", " ", 
        RowBox[{"t", " ", "+", " ", "dt"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "add", " ", "the", " ", "results", " ", "of", " ", "the", " ", 
         "calculation", " ", "step", " ", "to", " ", "the", " ", "array"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"modeldata", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"modeldata", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "x"}], "}"}]}], "]"}]}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataplot", " ", "=", " ", 
     RowBox[{"ListPlot", "[", "modeldata", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", "dataplot", "}"}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6840028717566423`*^9, 3.6840028804197216`*^9}, 
   3.684002946328555*^9, {3.684003032789824*^9, 3.684003035819249*^9}, {
   3.684003194019925*^9, 3.6840032327586594`*^9}, {3.684003567618879*^9, 
   3.6840035963091984`*^9}, {3.684003725187519*^9, 3.6840037444523983`*^9}, {
   3.6840037823354673`*^9, 3.6840038328405333`*^9}, {3.6840039558540306`*^9, 
   3.684004038586559*^9}, {3.6840041173601494`*^9, 3.6840042275613728`*^9}, {
   3.684004514844581*^9, 3.6840045162314205`*^9}, {3.684004949848997*^9, 
   3.684004950995141*^9}, {3.6840539704556475`*^9, 3.684053988161647*^9}, {
   3.684071234386777*^9, 3.684071260486635*^9}, {3.684071542620223*^9, 
   3.6840715446834393`*^9}, {3.6840724459952383`*^9, 3.684072458420024*^9}}],

Cell[BoxData["0.429`"], "Output",
 CellChangeTimes->{3.684004522835308*^9, 3.6840049519479437`*^9, 
  3.6840712615196037`*^9, 3.684071544917789*^9, 3.6840724587793956`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
kEY8xmLxzKsPoze1QS3xGIt9N3xuDUtl9hXEYywednZ+0FLHB2XioYZZw+P9
R5ULgE081HDvJBXtyCtC8CQeari/ZXfyPisRbCEeavjl2d2Y/adEcI54qGFU
Bu9wX4wIEoiHGl658qo8NVgEpcRDDS/+jLdYoiSCz8RDDR/uTpKRXCCEkcRD
HXU7XweZewrAjHio48rRpenfFPkwg3io4+n5DidSotrAn3ioY0qg+dMT3BY4
QTzU0fFa9KzuYY3wgHioo+y2dfsiymohn3ioY0vQRyujqCpoJx7qeGQI+1jB
tXIYbCy+YXWc5P7xUnLwG9AjHhq4Mm++8IjLa5hMPDTQV37UfrdzubCceGig
2+U8k+CeF3CQeGig91Re7jvnNLhJPDRwTuJ5zafyyZBJPDRwU8WymdPxEbQQ
Dw38eFBn2VCTWPhLPDQwM8FXPmhiHGgQj3G4b+Ou/e67EoFLPMbhbw9MGP/4
CSwmHuNQ5uCGzATOC9hFPMahndmH0zvqciGCeIxD/z+j1VneBZBKPMZh3PWv
HltXlUIN8RiHrcPM2s63VkAX8RiHx6t2bgpTrQEl4qGJB1IXDJ/mWg8s4qGJ
xT6flCN8mmAu8dBEz12waNPUVthMPDQxuXPe2K29bXCWeGii3GlO6VQ2Hx4R
D018qrDayd9FACX9CyBi8OjPlSZC+EQ8NFHWcJbZ8VamXicemlg3vaJt0xIR
mBKP8WghjFtozewH3IjHeHSVm1H8+a4I1hKP8aisWRYrtVQEx4nHeCwQnH1a
UyKEKOIxHsPnvPK17hTAK+IxHiVvad3XqOaDiHiMx50LfJYuOMiDQfRgYjwu
D3jb9mVIW//8HqyFWnZKf369bwIt6o8W3pvU9No2qR4eibuvq4WvyyouZ+yt
gQnUPy0c9c3+52PfSngjvvwk5vsfwp73rS4DH+qvFr56Fj1Fx7UIOsTjv0wL
3zy7O3ILvBrItxbqyEQu2VqUDcPFOA5oYYnRtcrhks8hgu5HC+9fNHfQFz0G
Q3p8ooUBZvVLQwIS4Qndnxb2KG5IjNoTBy7i5jK0sPT+UdXPyrFQRferhXOK
rwq7hz3qX9+atPDUkk0XJi9Ohu80H7UwclvSiqBTT+EgbRe1cH9053+1XVkg
R/NTG0UGsxeMGPEKbojxjtVGhyvFh0pKisCC5qs2PhkxY88hiXLIEN+uvTb+
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
wG6DAPLHBNzZsuPZEddm+B+tLDHQ
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.684004522835308*^9, 3.6840049519479437`*^9, 
  3.6840712615196037`*^9, 3.684071544917789*^9, 3.6840724588514295`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Sim8.csv\>\"", ",", "modeldata"}], "]"}]], "Input",
 CellChangeTimes->{{3.684004253455697*^9, 3.684004255368626*^9}, {
   3.684004339399042*^9, 3.684004357797412*^9}, {3.6840542061740766`*^9, 
   3.6840542088223414`*^9}, 3.6840542780232534`*^9}],

Cell[BoxData["\<\"Sim8.csv\"\>"], "Output",
 CellChangeTimes->{
  3.684004128972995*^9, {3.6840041651830273`*^9, 3.6840042557202888`*^9}, 
   3.6840043586108446`*^9, 3.6840712643397245`*^9, 3.684071547568787*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{"AbsoluteFileName", "[", "\"\<Sim8.csv\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.6840542200144606`*^9, 3.684054276258442*^9},
 NumberMarks->False],

Cell["\<\
After importing the data into LoggerPro, we fit the data to a Sine curve to \
get the response values of A, \[Phi], and \[Omega]r\
\>", "Text",
 CellChangeTimes->{{3.6840046323027353`*^9, 3.684004701320562*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ar8", " ", "=", " ", "0.3102"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]r8", " ", "=", " ", "5.428"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]r8", " ", "=", " ", "3.350"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6840047037259483`*^9, 3.684004798515588*^9}, {
  3.684005093816382*^9, 3.6840051028571663`*^9}, {3.684054211119571*^9, 
  3.68405421771023*^9}, {3.684054272311617*^9, 3.6840542748232327`*^9}, {
  3.684072055181652*^9, 3.6840720736230946`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation IX", "Section",
 CellChangeTimes->{{3.6840027726490984`*^9, 3.6840028008734694`*^9}, {
  3.684002992227764*^9, 3.6840029923680263`*^9}, {3.684052934016263*^9, 
  3.6840529352243843`*^9}, {3.684071276906304*^9, 3.684071278007509*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "define", " ", "constants", " ", "and", " ", "initial", " ", 
    "conditions"}], " ", "*)"}], "\[IndentingNewLine]", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"g", " ", "=", " ", "9.8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"m", " ", "=", " ", "0.429"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", " ", "0.38"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xeq", "=", "0.366"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ti", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", " ", "=", " ", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dt", " ", "=", " ", ".03"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"keff", " ", "=", " ", "11.58"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c2", " ", "=", "1.227"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", " ", "=", " ", "0.12"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]09", " ", "=", " ", "5.077"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", "5.527"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "0.2667"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{"b", "*", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "define", " ", "an", " ", "array", " ", "where", " ", "we", " ", "store", 
     " ", "the", " ", "results", " ", "of", " ", "the", " ", "simulation"}], 
    " ", "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modeldata", " ", "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"ti", ",", "x"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "set", " ", "up", " ", "the", " ", "procedure", " ", "for", " ", 
      "step"}], "-", "by", "-", 
     RowBox[{
     "step", " ", "solution", " ", "of", " ", "the", " ", "equation", " ", 
      "of", " ", "motion"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"t", "=", "ti"}], ",", 
      RowBox[{"t", "<", "tf"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"calculate", " ", "the", " ", "acceleration"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fs", " ", "=", " ", 
        RowBox[{
         RowBox[{"-", "keff"}], 
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"(", 
            RowBox[{"xeq", "+", 
             RowBox[{"b", "*", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Omega]09", "*", "t"}], "+", "\[Phi]"}], "]"}]}]}], 
            ")"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Ff2", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sign", "[", "vx", " ", "]"}]}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"Abs", "[", "vx", "]"}], ")"}], "2"], "*", "c2"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ax", "=", 
        FractionBox[
         RowBox[{"Fs", "+", "Ff2"}], "m"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"redefine", " ", "y"}], ",", " ", "vy", ",", " ", 
         RowBox[{
         "in", " ", "terms", " ", "of", " ", "the", " ", "values", " ", 
          "from", " ", "the", " ", "previous", " ", "step"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"vx", " ", "=", " ", 
        RowBox[{"vx", "+", " ", 
         RowBox[{"ax", " ", "dt"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", " ", 
        RowBox[{"x", " ", "+", " ", 
         RowBox[{"vx", " ", "dt"}]}]}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"t", "=", " ", 
        RowBox[{"t", " ", "+", " ", "dt"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "add", " ", "the", " ", "results", " ", "of", " ", "the", " ", 
         "calculation", " ", "step", " ", "to", " ", "the", " ", "array"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"modeldata", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"modeldata", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "x"}], "}"}]}], "]"}]}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataplot", " ", "=", " ", 
     RowBox[{"ListPlot", "[", "modeldata", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", "dataplot", "}"}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6840028717566423`*^9, 3.6840028804197216`*^9}, 
   3.684002946328555*^9, {3.684003032789824*^9, 3.684003035819249*^9}, {
   3.684003194019925*^9, 3.6840032327586594`*^9}, {3.684003567618879*^9, 
   3.6840035963091984`*^9}, {3.684003725187519*^9, 3.6840037444523983`*^9}, {
   3.6840037823354673`*^9, 3.6840038328405333`*^9}, {3.6840039558540306`*^9, 
   3.684004038586559*^9}, {3.6840041173601494`*^9, 3.6840042275613728`*^9}, {
   3.684004514844581*^9, 3.6840045162314205`*^9}, {3.684004949848997*^9, 
   3.684004950995141*^9}, {3.6840539994446473`*^9, 3.684054007739647*^9}, {
   3.6840713181843014`*^9, 3.6840713417658625`*^9}, {3.684071524980852*^9, 
   3.6840715282492247`*^9}, {3.68407246428053*^9, 3.6840724704361496`*^9}}],

Cell[BoxData["0.429`"], "Output",
 CellChangeTimes->{3.684004522835308*^9, 3.6840049519479437`*^9, 
  3.6840713426785126`*^9, 3.684071528686725*^9, 3.6840724707330236`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
5A9bDP60a9n7phDwJH/YYqJcutTV1DuQQv6wRftbbbdUlt6HQfKHLQbsrHBq
tUmCWeQPW3xTd+/ZtqF0CCR/2KL4x+WNMvW5UE3+sEW8675dencRKAt4rLDF
M6+SjK9ffgse5A9bFL5urO95ohLiyR+2WPuo2IZdXAO95A9bvFmg3X51UgMw
yR+26KFhE8m2awY/8octrl8dvVPJpQ1KyR/88Wxdk5Z9k1//C3hc5Lcnk9pS
/qET3MkftrhTWihzcAoboskftjhp8zynZD0OdJM/bHGLdeX4veJcYJA/bDHr
psTOmAJ+/Uf+4Pd/pu3TM/z9SgH5wxYLj0PUj8s8EBXwyLfFOqvJ8x359aQr
+cMWU0XGSPWv50EY+cMWc3Wqd95q5QKb/GGLfi0mp9bx61d98oct3ttoMfHs
EBu8yR+2+HvK+1eyaSzIIn/Y4nGeS/OrGfz7/zSBP2zx1cHsptgN7eBC/mBi
E16yqVTl7//IH0xc3ZXrFFrfAM3kDyZKVY8rfHG7FjTIH0xUtfcOeehdBZ7k
DyYud9YT9/tYDinkDyZeVh/Yt31JCQySP5i4lCW5XcLkFcwifzDxSvBNkdVm
LyGQ/MHEGZsOjiuwT4dq8gcTf7Xq+x18kATKAh7zmWgQZrhvqsZD8CB/MLF+
unfY7PmREE/+YOJP154xR21DoZf8wcTJD590mH0MAyb5g4m9s8T7F2A0+JE/
mDjJaVlcnGUClJI/mGi4QM+UXZ8KMgIep5k4/8SHDTKyL8Gd/MHExcLrH6X+
fAXR5A8mDmWJXXP9/Qa6yR9M9L21OGZ0QgUwyB9MfFqk0uXRWw1HyB9MdJ70
MO6ZbT0UkD+YeP23v++lvU0gKuCRwUS3L1UrAs+3giv5g4knf3aWILMDwsgf
TCy85KfBCu4ENvmDicpXZ/i+rWKBPvmDiY9MCvo2feTzJ38wUVOt9LBuIwey
yB9MLOVpyl4O5YKw4A80vzDxbPRF2xZdHriQP5hYY3ljlzi/ngwifzBx5abT
eVH8erKZ/GGHMVrb/Jb58ECD/GGHhqEy1xrG8v1P/rDDczMubGM5cyGF/GGH
E5/avLJw5u//yR92KJn0z+qdGBtmkT/s8PzSnC+99zohkPxhh3n5puI98h1Q
TcvZDncpFG249KMFlAU8ZtqhlvO5axfiG8GD/GGHG99m/j6xrQ7iyR922OwU
ahXOrIZe8ocdpgX9vLzCrAKY5A873HrON/Rg0hvwI3/YYbSq3C/53YVQSv6w
w+yQ8rzAlFyQEfA4ZIesh21ZEqrPwZ38YYf75myx0TFMhmjyhx0ezjwmMWPL
I+gmf9jh45+SNu+TooBB/rDDvoC5l+cphcER8gd//h5/RIXEUCggf9jhxxdi
/24digJR+oNZ/vVjRh0RxzhwJX/Y4Z5rau7vy1MgjPxhh4sK1hxtvJYNbPKH
Hbb79+YEBBSAPvnDDtW35Ure21YC3uQPO1zF8t9+Me0dZJE/7PAy+401qFSD
sOAFTLYdJu5ZFzNtax24kD/scPbiZzoR0Y0QRP6ww8DxY6sfvmqBZvKHHbpX
O/69/qIdNMgf9ugVcPdxEv9+4kn+sMeUnxrrZAJYkEL+sMcx0jWOzg/ZMEj+
sMfgsQu8KyI5MIv8YY8HRi89PW0XFwLJH/YY3lTHujyRB9XkD3vUepz92YRf
TyoLeFjbIzfrfMJDfj3pQf6wxwc6Has+8OvJePKHPU59t3/Ajr+ee8kf9hi/
sPxIw0kuMMkf9tjlf/zUv6v8/T/5wx7D3LbHndzIhlLyhz1qX7ouP06IBTIC
Hrv44xlVqFd2rAPcyR/2eOx+ZPqy4laIJn/Y4y7mQamSE03QTf6wx2WB14VC
beqBQf6wR7lQ09rCsTVwhPxhj3W+zdbrv1dAAfnDHllKvxKz5d6CKL0Qa4/T
l6oPXEkrAlfyhz2qVb567V+fB2HkD3tsFL6bzJHPAjb5wx7nPzuQ/6I0BfTJ
H/ZYyZk2alpbPHiTP+yx/Grj5BuLoiGL/GGPdjJx83p9w0FY8AcvjfaotDZX
e8NQCLiQP+zxhkH9rNmDdyGI/MHna7fJTi74ITSTP+wxy6ln5qQPT0GD/MGf
T+mE8QqGmeBJ/nDAptFTk26q5cP/AG0tU8A=
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.684004522835308*^9, 3.6840049519479437`*^9, 
  3.6840713426785126`*^9, 3.684071528686725*^9, 3.684072470811166*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Sim9.csv\>\"", ",", "modeldata"}], "]"}]], "Input",
 CellChangeTimes->{{3.684004253455697*^9, 3.684004255368626*^9}, {
   3.684004339399042*^9, 3.684004357797412*^9}, 3.6840542444959087`*^9}],

Cell[BoxData["\<\"Sim9.csv\"\>"], "Output",
 CellChangeTimes->{
  3.684004128972995*^9, {3.6840041651830273`*^9, 3.6840042557202888`*^9}, 
   3.6840043586108446`*^9, 3.684071347238267*^9, 3.6840715324258485`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{"AbsoluteFileName", "[", "\"\<Sim9.csv\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.684054243463805*^9},
 NumberMarks->False],

Cell["\<\
After importing the data into LoggerPro, we fit the data to a Sine curve to \
get the response values of A, \[Phi], and \[Omega]r\
\>", "Text",
 CellChangeTimes->{{3.6840046323027353`*^9, 3.684004701320562*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ar9", " ", "=", " ", "0.3391"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]r9", " ", "=", " ", "4.055"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]r9", " ", "=", " ", "5.077"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6840047037259483`*^9, 3.684004798515588*^9}, {
  3.684005093816382*^9, 3.6840051028571663`*^9}, {3.684054230495508*^9, 
  3.684054239639423*^9}, {3.6840721023259764`*^9, 3.684072120548622*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation X", "Section",
 CellChangeTimes->{{3.6840027726490984`*^9, 3.6840028008734694`*^9}, {
   3.684002992227764*^9, 3.6840029923680263`*^9}, {3.6840529385687184`*^9, 
   3.6840529442732887`*^9}, 3.684054012428647*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "define", " ", "constants", " ", "and", " ", "initial", " ", 
    "conditions"}], " ", "*)"}], "\[IndentingNewLine]", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"g", " ", "=", " ", "9.8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"m", " ", "=", " ", "0.429"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", " ", "0.38"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xeq", "=", "0.366"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ti", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", " ", "=", " ", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dt", " ", "=", " ", ".03"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"keff", " ", "=", " ", "11.58"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c2", " ", "=", "1.227"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r", " ", "=", " ", "0.12"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]010", "=", " ", "5.036"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", "=", "1.107"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "0.2639"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{"b", "*", "r"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "define", " ", "an", " ", "array", " ", "where", " ", "we", " ", "store", 
     " ", "the", " ", "results", " ", "of", " ", "the", " ", "simulation"}], 
    " ", "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modeldata", " ", "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"ti", ",", "x"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "set", " ", "up", " ", "the", " ", "procedure", " ", "for", " ", 
      "step"}], "-", "by", "-", 
     RowBox[{
     "step", " ", "solution", " ", "of", " ", "the", " ", "equation", " ", 
      "of", " ", "motion"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"t", "=", "ti"}], ",", 
      RowBox[{"t", "<", "tf"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"calculate", " ", "the", " ", "acceleration"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fs", " ", "=", " ", 
        RowBox[{
         RowBox[{"-", "keff"}], 
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"(", 
            RowBox[{"xeq", "+", 
             RowBox[{"b", "*", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Omega]010", "*", "t"}], "+", "\[Phi]"}], "]"}]}]}],
             ")"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Ff2", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sign", "[", "vx", " ", "]"}]}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"Abs", "[", "vx", "]"}], ")"}], "2"], "*", "c2"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ax", "=", 
        FractionBox[
         RowBox[{"Fs", "+", "Ff2"}], "m"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"redefine", " ", "y"}], ",", " ", "vy", ",", " ", 
         RowBox[{
         "in", " ", "terms", " ", "of", " ", "the", " ", "values", " ", 
          "from", " ", "the", " ", "previous", " ", "step"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"vx", " ", "=", " ", 
        RowBox[{"vx", "+", " ", 
         RowBox[{"ax", " ", "dt"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", " ", 
        RowBox[{"x", " ", "+", " ", 
         RowBox[{"vx", " ", "dt"}]}]}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"t", "=", " ", 
        RowBox[{"t", " ", "+", " ", "dt"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "add", " ", "the", " ", "results", " ", "of", " ", "the", " ", 
         "calculation", " ", "step", " ", "to", " ", "the", " ", "array"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"modeldata", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"modeldata", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "x"}], "}"}]}], "]"}]}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataplot", " ", "=", " ", 
     RowBox[{"ListPlot", "[", "modeldata", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", "dataplot", "}"}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6840028717566423`*^9, 3.6840028804197216`*^9}, 
   3.684002946328555*^9, {3.684003032789824*^9, 3.684003035819249*^9}, {
   3.684003194019925*^9, 3.6840032327586594`*^9}, {3.684003567618879*^9, 
   3.6840035963091984`*^9}, {3.684003725187519*^9, 3.6840037444523983`*^9}, {
   3.6840037823354673`*^9, 3.6840038328405333`*^9}, {3.6840039558540306`*^9, 
   3.684004038586559*^9}, {3.6840041173601494`*^9, 3.6840042275613728`*^9}, {
   3.684004514844581*^9, 3.6840045162314205`*^9}, {3.684004949848997*^9, 
   3.684004950995141*^9}, {3.684054019156647*^9, 3.6840540269956474`*^9}, {
   3.684071378959417*^9, 3.6840713895979815`*^9}, {3.6840714593451395`*^9, 
   3.684071512365507*^9}, {3.6840724748129683`*^9, 3.6840724860024366`*^9}}],

Cell[BoxData["0.429`"], "Output",
 CellChangeTimes->{3.684004522835308*^9, 3.6840049519479437`*^9, 
  3.6840715129904537`*^9, 3.6840724873898134`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.684004522835308*^9, 3.6840049519479437`*^9, 
  3.6840715129904537`*^9, 3.684072487452315*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Sim10.csv\>\"", ",", "modeldata"}], "]"}]], "Input",
 CellChangeTimes->{{3.684004253455697*^9, 3.684004255368626*^9}, {
   3.684004339399042*^9, 3.684004357797412*^9}, 3.6840542507675357`*^9}],

Cell[BoxData["\<\"Sim10.csv\"\>"], "Output",
 CellChangeTimes->{
  3.684004128972995*^9, {3.6840041651830273`*^9, 3.6840042557202888`*^9}, 
   3.6840043586108446`*^9, 3.6840715160069532`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{"AbsoluteFileName", "[", "\"\<Sim10.csv\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.684054251239583*^9},
 NumberMarks->False],

Cell["\<\
After importing the data into LoggerPro, we fit the data to a Sine curve to \
get the response values of A, \[Phi], and \[Omega]r\
\>", "Text",
 CellChangeTimes->{{3.6840046323027353`*^9, 3.684004701320562*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ar10", " ", "=", " ", "0.3397"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]r10", " ", "=", " ", "5.938"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]r10", " ", "=", " ", "5.036"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6840047037259483`*^9, 3.684004798515588*^9}, {
  3.684005093816382*^9, 3.6840051028571663`*^9}, {3.6840542524557047`*^9, 
  3.6840542541678753`*^9}, {3.684072154864443*^9, 3.684072183787576*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plots of Data", "Section",
 CellChangeTimes->{{3.6840721865182886`*^9, 3.6840721888181887`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ar", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "Ar1", ",", "Ar2", ",", "Ar3", ",", "Ar4", ",", "Ar5", ",", "Ar6", ",", 
     "Ar7", ",", "Ar8", ",", "Ar9", ",", "Ar10"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]r", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\[Phi]r1", ",", "\[Phi]r2", ",", "\[Phi]r3", ",", "\[Phi]r4", ",", 
     "\[Phi]r5", ",", "\[Phi]r6", ",", "\[Phi]r7", ",", "\[Phi]r8", ",", 
     "\[Phi]r9", ",", "\[Phi]r10"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]0", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\[Omega]01", ",", "\[Omega]02", ",", "\[Omega]03", ",", "\[Omega]04", 
     ",", "\[Omega]05", ",", "\[Omega]06", ",", "\[Omega]07", ",", 
     "\[Omega]08", ",", "\[Omega]09", ",", "\[Omega]010"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]r", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\[Omega]r1", ",", "\[Omega]r2", ",", "\[Omega]r3", ",", "\[Omega]r4", 
     ",", "\[Omega]r5", ",", "\[Omega]r6", ",", "\[Omega]r7", ",", 
     "\[Omega]r8", ",", "\[Omega]r9", ",", "\[Omega]r10"}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6840721934966106`*^9, 3.6840723144659753`*^9}, {
  3.6840725162493663`*^9, 3.6840725528555627`*^9}, {3.684072624765448*^9, 
  3.684072655515567*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"data1", " ", "=", " ", 
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{"\[Omega]0", ",", "Ar"}], "}"}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.684072767753566*^9, 3.6840727898380594`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data2", " ", "=", " ", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"\[Omega]0", ",", "\[Omega]r"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data3", " ", "=", " ", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"\[Phi]r", ",", "\[Omega]0"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6840728256467133`*^9, 3.684072855445408*^9}, {
  3.6841056057483253`*^9, 3.684105610697323*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\[Omega]0\\\", \\\",\\\", \\\"\[Omega]r\\\"}], \\\"}\\\"}]\\) \
cannot be transposed.\"",2,1,1,32517391644188536288,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.684105612604786*^9}],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\[Phi]r\
\\\", \\\",\\\", \\\"\[Omega]0\\\"}], \\\"}\\\"}]\\) cannot be transposed.\"",
   2,2,2,32517391644188536288,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6841056126448154`*^9}]
}, Open  ]],

Cell["Amplitude vs \[Omega]0", "Text",
 CellChangeTimes->{{3.6841017170753684`*^9, 3.684101727386417*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "data1", "]"}]], "Input",
 CellChangeTimes->{{3.684072556045081*^9, 3.684072601941236*^9}, {
  3.6840727304404507`*^9, 3.684072731175146*^9}, {3.684072792447752*^9, 
  3.6840728012168937`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1.405, 0.2788}, {3.824, 0.3793}, {5.124, 0.3347}, {5.935, 
      0.2786}, {5.935, 0.2787}, {7.765, 0.1767}, {9.686, 0.1034}, {5.428, 
      0.3102}, {5.077, 0.3391}, {5.036, 0.3397}}]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 9.686}, {0, 0.3793}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.684072602488062*^9, 3.684072731440773*^9, 
  3.6840728017169013`*^9}]
}, Open  ]],

Cell["\[Omega]r vs \[Omega]0", "Text",
 CellChangeTimes->{{3.684101742899702*^9, 3.684101759171009*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", "data2", "]"}]], "Input",
 CellChangeTimes->{{3.6840726147000856`*^9, 3.6840726215764637`*^9}, {
  3.684072660234132*^9, 3.684072663508152*^9}, {3.6840728595297527`*^9, 
  3.684072861215075*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1.405, 1.405}, {3.824, 3.824}, {5.124, 5.124}, {5.935, 
      5.935}, {5.935, 5.935}, {7.765, 7.765}, {9.686, 9.686}, {5.428, 3.35}, {
      5.077, 5.077}, {5.036, 5.036}}]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 9.686}, {0, 9.686}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{{3.684104751621975*^9, 3.684104751625996*^9}}],

Cell["\[Phi]r vs \[Omega]0", "Text",
 CellChangeTimes->{{3.6841017658953032`*^9, 3.6841017984194655`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "data3", "]"}]], "Input",
 CellChangeTimes->{{3.6840728646224513`*^9, 3.6840728708793297`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1.405, 3.861}, {3.824, 2.266}, {5.124, 1.32}, {5.935, 
      1.799}, {5.935, 1.415}, {7.765, 1.947}, {9.686, 4.129}, {5.428, 
      5.428}, {5.077, 4.055}, {5.036, 5.938}}]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 9.686}, {0, 5.938}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.684072871285529*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 175, 4, 166, "Title"],
Cell[CellGroupData[{
Cell[780, 30, 152, 2, 70, "Section"],
Cell[CellGroupData[{
Cell[957, 36, 5804, 137, 828, "Input"],
Cell[6764, 175, 146, 2, 30, "Output"],
Cell[6913, 179, 18231, 311, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25181, 495, 220, 4, 30, "Input"],
Cell[25404, 501, 190, 3, 30, "Output"]
}, Open  ]],
Cell[25609, 507, 186, 5, 30, "Input"],
Cell[25798, 514, 221, 4, 30, "Text"],
Cell[26022, 520, 434, 9, 69, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26493, 534, 100, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[26618, 539, 5173, 128, 809, "Input"],
Cell[31794, 669, 156, 3, 30, "Output"],
Cell[31953, 674, 18302, 313, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50292, 992, 175, 3, 30, "Input"],
Cell[50470, 997, 109, 1, 30, "Output"]
}, Open  ]],
Cell[50594, 1001, 385, 8, 69, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51016, 1014, 99, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[51140, 1019, 5100, 127, 809, "Input"],
Cell[56243, 1148, 172, 2, 30, "Output"],
Cell[56418, 1152, 18271, 311, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74726, 1468, 226, 4, 30, "Input"],
Cell[74955, 1474, 136, 2, 30, "Output"]
}, Open  ]],
Cell[75106, 1479, 483, 9, 69, "Input"],
Cell[75592, 1490, 805, 12, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76434, 1507, 204, 3, 70, "Section"],
Cell[CellGroupData[{
Cell[76663, 1514, 5786, 136, 809, "Input"],
Cell[82452, 1652, 468, 7, 30, "Output"],
Cell[82923, 1661, 18537, 316, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101497, 1982, 396, 6, 30, "Input"],
Cell[101896, 1990, 410, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102343, 2001, 228, 6, 30, "Input"],
Cell[102574, 2009, 304, 7, 23, "Message"],
Cell[102881, 2018, 360, 7, 23, "Message"],
Cell[103244, 2027, 176, 3, 30, "Output"]
}, Open  ]],
Cell[103435, 2033, 221, 4, 30, "Text"],
Cell[103659, 2039, 689, 12, 69, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104385, 2056, 203, 3, 70, "Section"],
Cell[CellGroupData[{
Cell[104613, 2063, 5846, 137, 809, "Input"],
Cell[110462, 2202, 297, 5, 30, "Output"],
Cell[110762, 2209, 35129, 589, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145928, 2803, 243, 4, 30, "Input"],
Cell[146174, 2809, 264, 4, 30, "Output"]
}, Open  ]],
Cell[146453, 2816, 230, 6, 30, "Input"],
Cell[146686, 2824, 272, 5, 30, "Text"],
Cell[146961, 2831, 584, 11, 69, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147582, 2847, 204, 3, 70, "Section"],
Cell[CellGroupData[{
Cell[147811, 2854, 5737, 135, 809, "Input"],
Cell[153551, 2991, 195, 3, 30, "Output"],
Cell[153749, 2996, 18227, 311, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172013, 3312, 245, 4, 30, "Input"],
Cell[172261, 3318, 235, 4, 30, "Output"]
}, Open  ]],
Cell[172511, 3325, 230, 6, 30, "Input"],
Cell[172744, 3333, 221, 4, 30, "Text"],
Cell[172968, 3339, 486, 9, 69, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173491, 3353, 205, 3, 70, "Section"],
Cell[CellGroupData[{
Cell[173721, 3360, 5731, 135, 809, "Input"],
Cell[179455, 3497, 200, 3, 30, "Output"],
Cell[179658, 3502, 18188, 311, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197883, 3818, 245, 4, 30, "Input"],
Cell[198131, 3824, 214, 3, 30, "Output"]
}, Open  ]],
Cell[198360, 3830, 230, 6, 30, "Input"],
Cell[198593, 3838, 221, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[198839, 3846, 466, 8, 69, "Input"],
Cell[199308, 3856, 78, 1, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[199435, 3863, 206, 3, 70, "Section"],
Cell[CellGroupData[{
Cell[199666, 3870, 5673, 133, 809, "Input"],
Cell[205342, 4005, 172, 2, 30, "Output"],
Cell[205517, 4009, 18247, 311, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223801, 4325, 299, 5, 30, "Input"],
Cell[224103, 4332, 212, 3, 30, "Output"]
}, Open  ]],
Cell[224330, 4338, 252, 6, 30, "Input"],
Cell[224585, 4346, 221, 4, 30, "Text"],
Cell[224809, 4352, 532, 10, 69, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225378, 4367, 250, 3, 70, "Section"],
Cell[CellGroupData[{
Cell[225653, 4374, 5685, 134, 809, "Input"],
Cell[231341, 4510, 172, 2, 30, "Output"],
Cell[231516, 4514, 18253, 311, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249806, 4830, 245, 4, 30, "Input"],
Cell[250054, 4836, 212, 3, 30, "Output"]
}, Open  ]],
Cell[250281, 4842, 228, 6, 30, "Input"],
Cell[250512, 4850, 221, 4, 30, "Text"],
Cell[250736, 4856, 482, 9, 69, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251255, 4870, 229, 3, 70, "Section"],
Cell[CellGroupData[{
Cell[251509, 4877, 5679, 133, 809, "Input"],
Cell[257191, 5012, 150, 2, 30, "Output"],
Cell[257344, 5016, 18251, 311, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275632, 5332, 246, 4, 30, "Input"],
Cell[275881, 5338, 191, 3, 30, "Output"]
}, Open  ]],
Cell[276087, 5344, 229, 6, 30, "Input"],
Cell[276319, 5352, 221, 4, 30, "Text"],
Cell[276543, 5358, 487, 9, 69, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277067, 5372, 102, 1, 70, "Section"],
Cell[277172, 5375, 1369, 33, 88, "Input"],
Cell[278544, 5410, 281, 7, 50, "Input"],
Cell[CellGroupData[{
Cell[278850, 5421, 483, 13, 50, "Input"],
Cell[279336, 5436, 331, 7, 21, "Message"],
Cell[279670, 5445, 333, 7, 21, "Message"]
}, Open  ]],
Cell[280018, 5455, 106, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[280149, 5460, 233, 4, 30, "Input"],
Cell[280385, 5466, 1581, 37, 249, "Output"]
}, Open  ]],
Cell[281981, 5506, 104, 1, 30, "Text"],
Cell[282088, 5509, 235, 4, 30, "Input"],
Cell[282326, 5515, 1543, 36, 246, InheritFromParent],
Cell[283872, 5553, 106, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[284003, 5558, 135, 2, 30, "Input"],
Cell[284141, 5562, 1520, 36, 249, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

